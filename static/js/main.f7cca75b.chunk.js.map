{"version":3,"sources":["assets/img/play.svg","assets/img/wave.svg","assets/img/pause.svg","assets/img/readed.svg","assets/img/noreaded.svg","redux/reduces sync /^/.*$","redux/store.js","components/Button/index.js","components/Block/index.js","utils/helpers/isAudio.js","utils/helpers/createAvatarFromHash.js","components/Avatar/index.js","components/Message/index.js","utils/helpers/convertCurentTime.js","components/DialogItem/index.js","components/Time/index.js","components/IconReaded/index.js","components/Dialogs/index.js","components/Status/index.js","components/ChatInput/index.js","components/Messages/index.js","utils/helpers/validateField.js","utils/helpers/openNotification.js","components/FormField/index.js","core/socket.js","core/axios.js","utils/api/dialogs.js","utils/api/messages.js","utils/api/user.js","utils/api/files.js","redux/actions/dialogs.js","redux/actions/messages.js","redux/actions/user.js","redux/actions/app.js","redux/actions/attachments.js","containers/Dialogs.js","containers/Messages.js","containers/ChatInput.js","containers/Status.js","containers/Sidebar.js","components/Sidebar/index.js","components/UploadFiles/index.js","components/ErrorIndicator/index.js","components/ErrorBoundry/index.js","modules/LoginForm/components/LoginForm.jsx","components/ErrorButton/index.js","utils/validations.js","modules/LoginForm/containers/LoginForm.js","modules/LoginForm/index.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/index.js","modules/RegisterForm/containers/RegisterForm.js","pages/Auth/components/CheckEmailInfo.js","pages/Auth/index.js","pages/Home/index.js","App.js","index.js","redux/reduces/dialogs.js","redux/reduces/messages.js","redux/reduces/index.js","redux/reduces/app.js","redux/reduces/attachments.js","redux/reduces/user.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","middleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","Button","props","className","classnames","size","Block","children","attachments","file","length","ext","createAvatarFromHash","hash","substr","split","item","index","charCodeAt","r","g","b","color","tinycolor","lighten","saturate","toHexString","colorLighten","Avatar","user","avatar","src","alt","fullname","_id","firstChar","toUpperCase","style","background","Emoji","require","Emojione","MessageAudio","audioSrc","useState","isPlaying","setIsPlaying","currentTime","setCurrentTime","progress","setProgress","audioEl","useRef","useEffect","setTimeout","console","log","current","duration","addEventListener","ref","preload","width","onClick","pause","play","pauseSvg","playSvg","waveSvg","number","mins","Math","floor","secs","toFixed","convertCurrentTime","Message","createdAt","text","date","isMe","isTyping","audio","readed","onRemoveMessage","setImageUrl","onShowImage","url","classNames","isAudio","isReaded","content","type","trigger","shape","icon","key","filename","renderAttachment","Time","Date","defaultProps","DialogItem","create_at","partner","lastMessage","author","currentDialogId","userId","to","isOnline","isToday","format","formatInWordsToNow","addSuffix","locale","ruLocale","IconReaded","readedSvg","noReadedSvg","Dialogs","items","onSearch","inputValue","isLoading","Search","Input","value","onChange","target","placeholder","tip","orderBy","description","Status","online","ChatInput","setValue","toggleEmoji","emojiVisible","addEmoji","selectFile","removeAttachment","isDisabled","inputRef","handleSendMessage","onSendMessage","isRecording","handleStartRecording","onStopRecording","onRecord","onSelect","TextArea","test","autoSize","minRows","maxRows","allowClear","onKeyUp","disabled","onFiles","containerProps","uploadProps","accept","multiple","Messages","boxRef","removeMessageById","showImage","setShowImage","imageUrl","dialogsItems","currentDialog","find","bind","visible","footer","onCancel","touched","errors","openNotification","message","notification","FormField","handleChange","handleBlur","Item","help","validateStatus","validateField","hasFeedback","prefix","onBlur","socket","io","axios","defaults","baseURL","headers","common","localStorage","token","get","a","async","post","data","dialog_id","delete","postData","query","formData","FormData","append","actions","setCurrentDialog","SET_CURRENT_DIALOG","payload","setItems","SET_ITEMS","fetchDialogs","dispatch","setIsLoading","dialogsApi","updateDialog","dialog","UPDATE_DIALOG","updateDialogs","operation","getState","state","oldDialogs","dialogs","some","createDialog","result","response","status","bool","SET_IS_LOADING","setMessages","fetchMessages","messagesApi","then","addMessage","ADD_MESSAGE","dialogsActions","updateUnreadMessages","messages","currentMessages","filter","REMOVE_MESSAGE","sendMessage","setAuth","SET_IS_AUTH","setUserData","SET_USER_DATA","fetchUserData","userApi","signOut","messagesActions","fetchLoginData","signUserUp","initializeApp","isAuth","promise","userActions","Promise","all","INITIALIZED_SUCCESS","setAttachments","files","SET_ATTACHMENTS","REMOVE_ATTACHMENT","upload","filesApi","React","memo","setInputValue","Array","from","filtered","setFiltered","onUpdateDialogs","onDeleteMessage","onNewMessage","on","removeListener","toLowerCase","indexOf","connect","setIsTyping","typingTimeoutId","toggleIsTyping","dialogId","clearInterval","updateUnread","messagesRef","useCallback","node","scrollTo","attachmentsActions","setEmojiVisible","setIsRecording","setIsDisabled","mediaRecorder","setMediaRecorder","navigator","getUserMedia","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","onRecording","stream","recorder","MediaRecorder","start","onstart","onstop","ondataavailable","File","sendAudio","onError","err","audioId","stop","uid","onOutSideClick","el","contains","elHeight","offsetHeight","document","querySelector","height","removeEventListener","emoji","native","uploaded","i","random","name","emit","keyCode","currentDialogObj","withRouter","setVisible","users","setUsers","newMessageText","setNewMessageText","setPartner","undefined","selectInputValue","setSelectInputValue","showModal","handleCancel","handleOk","history","push","onInputSelect","val","error","onAddNewMessage","onInputChange","Option","Select","Sidebar","modalText","options","title","confirmLoading","loading","label","showSearch","optionFilterProp","filterOption","getBase64","reject","reader","FileReader","readAsDataURL","onload","onerror","UploadFiles","previewVisible","setPreviewVisible","previewImage","setPreviewImage","fileList","setFileList","action","listType","onPreview","preview","originFileObj","onRemove","subTitle","ErrorBoundry","errorIndicator","this","Component","LoginForm","handleSubmit","isSubmitting","onSubmit","values","rules","email","password","password_2","forEach","LoginFormContainer","withFormik","mapPropsToValues","validate","validateFunc","setSubmitting","displayName","RegisterForm","CheckEmailInfo","location","search","verified","setVerified","setError","info","extra","renderTextInfo","catch","Auth","exact","path","component","pathname","pop","fontSize","marginRight","cursor","confirm","app","isInitialized","appActions","render","position","left","top","transform","ReactDOM","getElementById","initialState","newItems","combineReducers","reduce","initial","default"],"mappings":"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","file":"static/js/main.f7cca75b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.65f03140.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave.2b8196a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.a61933e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/readed.c1f419d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/noreaded.3c841bf6.svg\";","var map = {\n\t\"./\": 95,\n\t\"./app\": 97,\n\t\"./app.js\": 97,\n\t\"./attachments\": 98,\n\t\"./attachments.js\": 98,\n\t\"./dialogs\": 71,\n\t\"./dialogs.js\": 71,\n\t\"./index\": 95,\n\t\"./index.js\": 95,\n\t\"./messages\": 72,\n\t\"./messages.js\": 72,\n\t\"./user\": 99,\n\t\"./user.js\": 99\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 291;","import {createStore} from \"redux\";\r\nimport {applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {compose} from 'redux';\r\n\r\nimport rootReducer from \"./reduces\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\n    const enhancer = composeEnhancers(\r\n      applyMiddleware(...middleware),\r\n      // other store enhancers if any\r\n    );\r\n\r\n\r\nlet store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport {Button as BaseButton} from 'antd';\r\nimport classnames from 'classnames';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <BaseButton {...props} className={classnames(\"button\", props.className, {'button--large': props.size === 'large'})} />\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: propTypes.string\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n\r\nimport './Block.scss';\r\n\r\nexport default function Block({children, className}) {\r\nreturn <div className = {classnames('block',className)}>{children}</div>\r\n}\r\n","export default attachments => {\n  if (!attachments) {\n    return null;\n  }\n  const file = attachments[0];\n  return attachments.length && file.ext === \"webm\";\n};\n","import tinycolor from \"tinycolor2\";\r\n\r\nconst getCorrectIndex = index => {\r\n  return index.charCodeAt(0) > 255\r\n    ? 255\r\n    : index.charCodeAt(0) < 0\r\n    ? 0\r\n    : index.charCodeAt(0);\r\n};\r\n\r\nconst createAvatarFromHash = hash => {\r\n  const [r, g, b] = hash\r\n    .substr(11, 14)\r\n    .split(\"\")\r\n    .map(item => {\r\n      return getCorrectIndex(item);\r\n    });\r\n  return {\r\n    color: tinycolor({ r, g, b })\r\n      .lighten(10)\r\n      .saturate(15)\r\n      .toHexString(),\r\n    colorLighten: tinycolor({ r, g, b })\r\n      .lighten(30)\r\n      .saturate(30)\r\n      .toHexString()\r\n  };\r\n};\r\n\r\nexport default createAvatarFromHash;\r\n","import React from \"react\";\r\nimport createAvatarFromHash from \"../../utils/helpers/createAvatarFromHash\";\r\n\r\nimport \"./Avatar.scss\";\r\n\r\nexport default function Avatar({ user }) {\r\n  if (user) {\r\n    if (user.avatar) {\r\n      return (\r\n        <img\r\n          src={user.avatar}\r\n          className=\"avatar\"\r\n          alt={`Avatar ${user.fullname}`}\r\n        />\r\n      );\r\n    } else {\r\n      const { color, colorLighten } = createAvatarFromHash(user._id);\r\n      const firstChar = user.fullname[0].toUpperCase();\r\n      return (\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(135deg, ${color} 0%, ${colorLighten} 96.52%)`\r\n          }}\r\n          className=\"avatar avatar--symbol\"\r\n        >\r\n          {firstChar}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nimport convertCurrentTime from \"../../utils/helpers/convertCurentTime\";\r\nimport isAudio from \"../../utils/helpers/isAudio\";\r\n\r\nimport { Popover, Button } from \"antd\";\r\n\r\nimport { Time, IconReaded } from \"./../../components\";\r\nimport playSvg from \"../../assets/img/play.svg\";\r\nimport waveSvg from \"../../assets/img/wave.svg\";\r\nimport pauseSvg from \"../../assets/img/pause.svg\";\r\nimport Avatar from \"../Avatar\";\r\n\r\nimport \"./Message.scss\";\r\nconst Render = require(\"react-emoji-render\");\r\nconst Emoji = Render.Emojione;\r\n\r\nconst MessageAudio = ({ audioSrc }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const audioEl = useRef(null);\r\n\r\n  const toggleAudio = () => {\r\n    if (!isPlaying) {\r\n      audioEl.current.play();\r\n    } else {\r\n      audioEl.current.pause();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => console.log(audioEl.current.duration), 2000);\r\n\r\n    audioEl.current.addEventListener(\"playing\", () => setIsPlaying(true));\r\n    audioEl.current.addEventListener(\"ended\", () => {\r\n      setIsPlaying(false);\r\n      setProgress(0);\r\n      setCurrentTime(0);\r\n    });\r\n    audioEl.current.addEventListener(\"pause\", () => setIsPlaying(false));\r\n    audioEl.current.addEventListener(\"timeupdate\", () => {\r\n      const duration = (audioEl.current && audioEl.current.duration) || 0;\r\n\r\n      setCurrentTime(audioEl.current.currentTime);\r\n      setProgress((audioEl.current.currentTime / duration) * 100);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"message__audio\">\r\n      <audio src={audioSrc} ref={audioEl} preload=\"auto\"></audio>\r\n      <div\r\n        style={{ width: progress + \"%\" }}\r\n        className=\"message__audio-progress\"\r\n      ></div>\r\n      <div className=\"message__audio-info\">\r\n        <div className=\"message__audio-btn\">\r\n          <button onClick={toggleAudio}>\r\n            {isPlaying ? (\r\n              <img src={pauseSvg} alt=\"Pause swg\" />\r\n            ) : (\r\n              <img src={playSvg} alt=\"Play swg\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div className=\"message__audio-wave\">\r\n          <img src={waveSvg} alt=\"Wave svg\" />\r\n        </div>\r\n        <div className=\"message__audio-duration\">\r\n          {convertCurrentTime(currentTime)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst Message = ({\r\n  createdAt,\r\n  text,\r\n  user,\r\n  date,\r\n  isMe,\r\n  attachments,\r\n  isTyping,\r\n  audio,\r\n  readed,\r\n  onRemoveMessage,\r\n  setImageUrl\r\n}) => {\r\n  const renderAttachment = item => {\r\n    if (item.ext !== \"webm\") {\r\n      return (\r\n        <div key={item._id} className=\"message__attachments-item\">\r\n          <img\r\n            src={item.url}\r\n            alt={item.filename}\r\n            onClick={() => {\r\n              onShowImage(item.url);\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <MessageAudio key={item._id} audioSrc={item.url} />;\r\n    }\r\n  };\r\n\r\n  let onShowImage = url => {\r\n    setImageUrl(url);\r\n  };\r\n  return (\r\n    <div\r\n      className={classNames(\"message\", {\r\n        \"message--isme\": isMe,\r\n        \"message--is-typing\": isTyping,\r\n        \"message--image\": attachments && attachments.length === 1 && !text,\r\n        \"message--is-audio\": isAudio(attachments)\r\n      })}\r\n    >\r\n      <div className=\"message__content\">\r\n        <IconReaded isMe={isMe} isReaded={readed} />\r\n        <div className=\"message__icon-actions\">\r\n          <Popover\r\n            content={\r\n              <div>\r\n                <Button onClick={onRemoveMessage} type=\"danger\">\r\n                  Удалить сообщение\r\n                </Button>\r\n              </div>\r\n            }\r\n            trigger=\"click\"\r\n          >\r\n            <Button type=\"link\" shape=\"circle\" icon=\"ellipsis\" />\r\n          </Popover>\r\n        </div>\r\n        <div className=\"message__avatar\">\r\n          <Avatar user={user} />\r\n        </div>\r\n        <div className=\"message__info\">\r\n          {\" \"}\r\n          {(isTyping || text) && (\r\n            <div className=\"message__bubble\">\r\n              {text && <p className=\"message__text\">{<Emoji text={text} />}</p>}\r\n\r\n              {isTyping && (\r\n                <div className=\"message__typing\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              )}\r\n              {audio && <MessageAudio audioSrc={audio} />}\r\n            </div>\r\n          )}\r\n          {attachments && (\r\n            <div className=\"message__attachments\">\r\n              {attachments.map(item => renderAttachment(item))}\r\n            </div>\r\n          )}\r\n          {date && (\r\n            <span className=\"message__date\">\r\n              <Time date={new Date(createdAt)} />\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  user: {}\r\n};\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  text: PropTypes.string,\r\n  user: PropTypes.object,\r\n  data: PropTypes.instanceOf(Date),\r\n  attachments: PropTypes.array,\r\n  isTyping: PropTypes.bool,\r\n  isReaded: PropTypes.bool,\r\n  isMe: PropTypes.bool\r\n};\r\n\r\nexport default Message;\r\n","export default number => {\r\n  const mins = Math.floor(number / 60);\r\n  const secs = (number % 60).toFixed();\r\n  return `${mins < 10 ? \"0\" : \"\"}${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport format from \"date-fns/format\";\r\nimport { Icon } from \"antd\";\r\nimport { IconReaded } from \"..\";\r\nimport isToday from \"date-fns/isToday\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Render = require(\"react-emoji-render\");\r\nconst Emoji = Render.Emojione;\r\nconst getMessageTime = create_at => {\r\n  if (isToday(new Date(create_at))) {\r\n    return format(new Date(create_at), \"HH:mm\");\r\n  } else {\r\n    return format(new Date(create_at), \"dd.MM.yyyy\");\r\n  }\r\n};\r\n\r\nexport default function DialogItem({\r\n  _id,\r\n  isMe,\r\n  partner,\r\n  lastMessage,\r\n  author,\r\n  currentDialogId,\r\n  userId\r\n}) {\r\n  let user = isMe ? partner : author;\r\n\r\n  return (\r\n    <Link to={`/dialog/${_id}`}>\r\n      <div\r\n        className={classNames(\"dialogs__item\", {\r\n          \"dialogs__item--online\": user.isOnline,\r\n          \"dialogs__item--active\": currentDialogId === _id\r\n        })}\r\n      >\r\n        <div className=\"dialogs__item-avatar\">\r\n          <Avatar user={user} />\r\n        </div>\r\n        <div className=\"dialogs__item-info\">\r\n          <div className=\"dialogs__item-info-top\">\r\n            <b>{user.fullname}</b>\r\n            {lastMessage && (\r\n              <span>{getMessageTime(new Date(lastMessage.createdAt))}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"dialogs__item-info-bottom\">\r\n            {lastMessage && lastMessage.text && (\r\n              <p>{<Emoji text={lastMessage.text} />}</p>\r\n            )}\r\n            {lastMessage && (\r\n              <IconReaded\r\n                isMe={userId === lastMessage.user._id}\r\n                isReaded={lastMessage.readed}\r\n              />\r\n            )}\r\n            {lastMessage.user._id !== userId && lastMessage.readed === false && (\r\n              <div className=\"dialogs__item-info-bottom-count\">\r\n                <Icon type=\"mail\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React, {Fragment} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport formatInWordsToNow from \"date-fns/formatDistanceToNow\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\n\r\n\r\nexport default function Time({ date }) {\r\n  return <Fragment>{formatInWordsToNow(date, { addSuffix: true, locale: ruLocale })}</Fragment> \r\n}\r\n\r\nTime.propTypes = {\r\n  data: PropTypes.instanceOf(Date)\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport readedSvg from \"../../assets/img/readed.svg\";\r\nimport noReadedSvg from \"../../assets/img/noreaded.svg\";\r\n\r\nimport \"./IconReaded.scss\";\r\n\r\nexport default function IconReaded({ isMe, isReaded }) {\r\n  return (\r\n    <div>\r\n      {isMe &&\r\n        (isReaded ? (\r\n          <img\r\n            className=\"message__icon-readed\"\r\n            src={readedSvg}\r\n            alt=\"Readed icon\"\r\n          />\r\n        ) : (\r\n          <img\r\n            className=\"message__icon-readed message__icon-readed--no\"\r\n            src={noReadedSvg}\r\n            alt=\"No readed icon\"\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nIconReaded.propTypes = {\r\n  isReaded: PropTypes.bool,\r\n  isMe: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport { Input } from \"antd\";\r\nimport { Empty, Spin } from \"antd\";\r\n\r\nimport { DialogItem } from \"..\";\r\n\r\nimport \"./Dialogs.scss\";\r\n\r\nexport default function Dialogs({\r\n  items,\r\n  userId,\r\n  onSearch,\r\n  inputValue,\r\n  isLoading,\r\n  currentDialogId\r\n}) {\r\n  const Search = Input.Search;\r\n\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div className=\"dialogs__search\">\r\n        <Search\r\n          value={inputValue}\r\n          onChange={e => {\r\n            onSearch(e.target.value);\r\n          }}\r\n          placeholder=\"Поиск среди контактов\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        {isLoading ? (\r\n          <Spin tip=\"Загрузка диалогов\" />\r\n        ) : items ? (\r\n          items.length > 0 ? (\r\n            orderBy(items, [\"created_at\"], [\"desc\"]).map(item => {\r\n              return (\r\n                <DialogItem\r\n                  key={item._id}\r\n                  isMe={item.author._id === userId}\r\n                  userId={userId}\r\n                  currentDialogId={currentDialogId}\r\n                  {...item}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <Empty description=\"Ничего не найдено\" />\r\n          )\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Status.scss\";\r\n\r\nexport default function Status({ online, fullname }) {\r\n  return (\r\n    <div className=\"chat__dialog-header-center\">\r\n      <b className=\"chat__dialog-header-username\">{fullname}</b>\r\n      <div className=\"chat__dialog-header-status\"></div>\r\n      <div className={classNames(\"status\", { \"status--online\": online })}>\r\n        {online ? \"онлайн\" : \"офлайн\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { UploadField } from \"@navjobs/upload\";\r\nimport { UploadFiles } from \"../\";\r\n\r\nimport { Button, Input } from \"antd\";\r\n\r\nimport \"./ChatInput.scss\";\r\n\r\nconst ChatInput = props => {\r\n  const {\r\n    value,\r\n    setValue,\r\n    toggleEmoji,\r\n    emojiVisible,\r\n    addEmoji,\r\n    selectFile,\r\n    attachments,\r\n    removeAttachment,\r\n    isDisabled,\r\n    inputRef,\r\n    handleSendMessage,\r\n    onSendMessage,\r\n    handleStartRecording,\r\n    isRecording,\r\n    onStopRecording,\r\n    onRecord\r\n  } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div ref={inputRef} className=\"chat-input\">\r\n        <div>\r\n          <div className=\"chat-input__smile-btn\">\r\n            <div className=\"chat-input__emoji-picker\">\r\n              {emojiVisible && <Picker onSelect={addEmoji} />}\r\n            </div>\r\n\r\n            <Button\r\n              onClick={toggleEmoji}\r\n              type=\"link\"\r\n              shape=\"circle\"\r\n              icon=\"smile\"\r\n            />\r\n          </div>\r\n          {isRecording ? (\r\n            <div className=\"chat-input__record-status\">\r\n              <i className=\"chat-input__record-status-bubble\"></i>\r\n              Recording...\r\n              <Button\r\n                className=\"stop-recording\"\r\n                type=\"link\"\r\n                shape=\"circle\"\r\n                icon=\"close\"\r\n                onClick={onStopRecording}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Input.TextArea\r\n              onChange={e => {\r\n                let re = /^\\s/;\r\n                let check = re.test(e.target.value);\r\n                if (!check) {\r\n                  setValue(e.target.value);\r\n                }\r\n              }}\r\n              placeholder=\"Введите текст сообщения\"\r\n              autoSize={{ minRows: 2, maxRows: 8 }}\r\n              allowClear={true}\r\n              value={value}\r\n              onKeyUp={handleSendMessage}\r\n              disabled={isDisabled}\r\n            />\r\n          )}\r\n\r\n          <div className=\"chat-input__actions\">\r\n            {value || attachments.length || isRecording ? (\r\n              <Button\r\n                disabled={isDisabled}\r\n                onClick={onSendMessage}\r\n                size=\"large\"\r\n                type=\"link\"\r\n                icon=\"right-circle\"\r\n              />\r\n            ) : (\r\n              <div className=\"chat-input__record-btn\">\r\n                <Button\r\n                  onClick={onRecord}\r\n                  type=\"link\"\r\n                  shape=\"circle\"\r\n                  icon=\"audio\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <UploadField\r\n              onFiles={selectFile}\r\n              containerProps={{\r\n                className: \"chat-input__actions-upload-btn\"\r\n              }}\r\n              uploadProps={{\r\n                accept: \".jpg,.jpeg,.png,.gif,.bmp\",\r\n                multiple: \"multiple\"\r\n              }}\r\n            >\r\n              <Button type=\"link\" shape=\"circle\" icon=\"camera\" />\r\n            </UploadField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <UploadFiles\r\n          attachments={attachments}\r\n          removeAttachment={removeAttachment}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nChatInput.propTypes = {};\r\n\r\nexport default ChatInput;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport find from \"lodash/find\";\r\n\r\nimport { Empty, Spin, Modal } from \"antd\";\r\n\r\nimport { Message } from \"../\";\r\n\r\nimport \"./Messages.scss\";\r\n\r\nconst Messages = ({\r\n  items,\r\n  isLoading,\r\n  boxRef,\r\n  currentDialogId,\r\n  userId,\r\n  removeMessageById,\r\n  attachments,\r\n  setImageUrl,\r\n  showImage,\r\n  setShowImage,\r\n  imageUrl,\r\n  dialogsItems,\r\n  isTyping\r\n}) => {\r\n  let currentDialog =\r\n    dialogsItems && find(dialogsItems, { _id: currentDialogId });\r\n  let partner;\r\n  if (currentDialog) {\r\n    partner =\r\n      currentDialog.partner.id === userId\r\n        ? currentDialog.author\r\n        : currentDialog.partner;\r\n  }\r\n\r\n  let handleCancel = () => {\r\n    setShowImage(false);\r\n    setImageUrl(null);\r\n  };\r\n  return (\r\n    <div\r\n      className={classNames(\"chat__dialog-messages\", {\r\n        \"chat__dialog-messages-attachments\": attachments.length\r\n      })}\r\n    >\r\n      <div\r\n        ref={boxRef}\r\n        className={classNames(\"messages\", { \"messages--loading\": isLoading })}\r\n      >\r\n        {isLoading ? (\r\n          <Spin size=\"large\" tip=\"Загрузка сообщений...\" />\r\n        ) : items && !isLoading && currentDialogId ? (\r\n          items.length > 0 ? (\r\n            items.map(item => {\r\n              return (\r\n                <Message\r\n                  key={item._id}\r\n                  alt=\"User avatar\"\r\n                  text={item.text}\r\n                  date={new Date()}\r\n                  isMe={item.user._id === userId}\r\n                  {...item}\r\n                  isTyping={false}\r\n                  onRemoveMessage={removeMessageById.bind(this, item._id)}\r\n                  setImageUrl={setImageUrl}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <Empty description=\"Диалог пуст\" />\r\n          )\r\n        ) : (\r\n          <Empty description=\"Виберите диалог\" />\r\n        )}{\" \"}\r\n        {isTyping && !isLoading && <Message isTyping={true} user={partner} />}\r\n      </div>\r\n\r\n      {imageUrl && (\r\n        <Modal visible={showImage} footer={null} onCancel={handleCancel}>\r\n          <img alt=\"previewImg\" style={{ width: \"100%\" }} src={imageUrl} />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMessages.propTypes = {\r\n  className: propTypes.string\r\n};\r\n\r\nexport default Messages;\r\n","export default (key, touched, errors) => {\r\n  if (touched[key]) {\r\n    if (errors[key]) {\r\n      return \"error\";\r\n    } else {\r\n      return \"success\";\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","import { notification } from \"antd\";\r\n\r\nconst openNotification = ({ type, message, description, duration }) => {\r\n  notification[type]({\r\n    message,\r\n    description,\r\n    duration\r\n  });\r\n};\r\nexport default openNotification;\r\n","import React from \"react\";\r\nimport { Form, Icon, Input } from \"antd\";\r\n\r\nimport { validateField } from \"../../utils/helpers\";\r\n\r\nexport default function FormField({\r\n  errors,\r\n  type,\r\n  icon,\r\n  placeholder,\r\n  handleChange,\r\n  handleBlur,\r\n  id,\r\n  touched\r\n}) {\r\n  return (\r\n    <Form.Item\r\n      help={touched[id] && errors[id]}\r\n      validateStatus={validateField(id, touched, errors)}\r\n      hasFeedback\r\n    >\r\n      {\" \"}\r\n      <Input\r\n        prefix={<Icon type={icon} style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        id={id}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n      />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import io from \"socket.io-client\";\r\n\r\nconst socket = io(\"https://my-messager-api.herokuapp.com/\");\r\n\r\nexport default socket;\r\n//https://my-messager-api.herokuapp.com/\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://my-messager-api.herokuapp.com/\";\r\naxios.defaults.headers.common[\"token\"] = window.localStorage.token;\r\nwindow.axios = axios;\r\n\r\nexport default axios;\r\n//https://my-messager-api.herokuapp.com/\r\n\r\n//http://localhost:3003\r\n","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  getAll: () => {\r\n    return axios.get(\"dialogs\");\r\n  },\r\n  createDialog: async ({ partner, text }) => {\r\n    let data = await axios.post(\"dialogs\", { partner, text });\r\n    return data.data;\r\n  }\r\n};\r\n","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  getAllByDialogId: id => {\r\n    return axios.get(\"messages?dialog=\" + id);\r\n  },\r\n  sendMessage: ({ text, currentDialogId, attachments }) => {\r\n    return axios.post(\"messages\", {\r\n      text,\r\n      attachments,\r\n      dialog_id: currentDialogId\r\n    });\r\n  },\r\n  removeMessageById: async id => {\r\n    let data = await axios.delete(\"messages?id=\" + id);\r\n    return data.data;\r\n  }\r\n};\r\n","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  signUserIn: postData => {\r\n    return axios.post(\"user/login\", postData);\r\n  },\r\n\r\n  getUserInfo: () => {\r\n    return axios.get(\"user/me\");\r\n  },\r\n  signUserUp: postData => {\r\n    return axios.post(\"user/registration\", postData);\r\n  },\r\n  verifyHash: async hash => {\r\n    let data = await axios.get(`user/verify?hash=${hash}`);\r\n    return data;\r\n  },\r\n  findUsers: async query => {\r\n    let data = await axios.get(`user/find?query=${query}`);\r\n    return data.data;\r\n  }\r\n};\r\n","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  file: async file => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    let data = await axios.post(\"files\", formData, {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\"\r\n      }\r\n    });\r\n    return data.data;\r\n  }\r\n};\r\n// fileUpload(file){\r\n//   const url = 'http://example.com/file-upload';\r\n//   const formData = new FormData();\r\n\r\n//   formData.append('file',file)\r\n//   const config = {\r\n","import { dialogsApi } from \"../../utils/api\";\r\nimport { openNotification } from \"../../utils/helpers\";\r\nimport {\r\n  SET_CURRENT_DIALOG,\r\n  SET_ITEMS,\r\n  UPDATE_DIALOG,\r\n  SET_IS_LOADING\r\n} from \"../reduces/dialogs\";\r\n\r\nconst actions = {\r\n  setCurrentDialog: id => ({ type: SET_CURRENT_DIALOG, payload: id }),\r\n  setItems: items => ({ type: SET_ITEMS, payload: items }),\r\n  fetchDialogs: () => async dispatch => {\r\n    dispatch(actions.setIsLoading(true));\r\n    let data = await dialogsApi.getAll();\r\n    dispatch(actions.setItems(data.data));\r\n    dispatch(actions.setIsLoading(false));\r\n  },\r\n  updateDialog: dialog => {\r\n    return { type: UPDATE_DIALOG, payload: dialog };\r\n  },\r\n  updateDialogs: ({ operation = \"\", item }) => (dispatch, getState) => {\r\n    let state = getState();\r\n\r\n    if (operation === \"SERVER:CREATE_DIALOG\") {\r\n      let oldDialogs = state.dialogs.items;\r\n      let userId = state.user.data.user._id;\r\n      let author = item.author._id;\r\n      let partner = item.partner._id;\r\n      let check = userId === partner || userId === author;\r\n      if (check) {\r\n        dispatch(actions.setItems([...oldDialogs, item]));\r\n      }\r\n    } else if (\r\n      operation === \"SERVER:NEW_MESSAGE\" ||\r\n      operation === \"SERVER:DELETE_MESSAGE\"\r\n    ) {\r\n      let dialogs = state.dialogs.items;\r\n\r\n      let check = dialogs.some(dialog => {\r\n        return dialog._id === item.dialog._id;\r\n      });\r\n      if (check) {\r\n        dispatch(actions.updateDialog(item.dialog));\r\n      }\r\n    }\r\n  },\r\n  createDialog: ({ partner, text }) => async dispatch => {\r\n    try {\r\n      let result = await dialogsApi.createDialog({\r\n        partner,\r\n        text\r\n      });\r\n      return result;\r\n    } catch (err) {\r\n      if (err.response.status === 403) {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Такой диалог уже существует\"\r\n        });\r\n      } else {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Ошибка\"\r\n        });\r\n      }\r\n    }\r\n  },\r\n  setIsLoading: bool => {\r\n    return { type: SET_IS_LOADING, payload: bool };\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { messagesApi } from \"../../utils/api\";\r\nimport { dialogsActions } from \"./index\";\r\nimport {\r\n  SET_ITEMS,\r\n  ADD_MESSAGE,\r\n  REMOVE_MESSAGE,\r\n  SET_IS_LOADING\r\n} from \"../reduces/messages\";\r\n\r\nconst actions = {\r\n  setMessages: items => ({ type: SET_ITEMS, payload: items }),\r\n  fetchMessages: id => dispatch => {\r\n    dispatch(actions.setIsLoading(true));\r\n    messagesApi.getAllByDialogId(id).then(({ data }) => {\r\n      dispatch(actions.setMessages(data));\r\n      dispatch(actions.setIsLoading(false));\r\n    });\r\n  },\r\n  addMessage: message => (dispatch, getState) => {\r\n    let { dialogs } = getState();\r\n    let userId = getState().user.data.user._id;\r\n\r\n    if (dialogs.currentDialogId === message.dialog._id) {\r\n      dispatch({ type: ADD_MESSAGE, payload: message });\r\n\r\n      if (userId !== message.user._id) {\r\n        messagesApi.getAllByDialogId(message.dialog._id);\r\n        dispatch(dialogsActions.updateDialog(message.dialog));\r\n      }\r\n    }\r\n  },\r\n\r\n  updateUnreadMessages: ({ messages, dialog }) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    let userId = getState().user.data.user._id;\r\n    let currentDialogId = await getState().dialogs.currentDialogId;\r\n\r\n    let author = dialog.author._id;\r\n    let partner = dialog.partner._id;\r\n    let hasDialog = userId === partner || userId === author;\r\n\r\n    if (hasDialog) {\r\n      if (dialog && dialog._id === currentDialogId) {\r\n        let currentMessages = getState().messages.items.filter(message => {\r\n          return (\r\n            message.dialog._id === currentDialogId &&\r\n            message.user._id === userId\r\n          );\r\n        });\r\n        let check = currentMessages.some(message => message.readed !== true);\r\n        if (check) {\r\n          await dispatch(actions.setMessages(messages));\r\n          await dispatch(dialogsActions.updateDialog(dialog));\r\n        }\r\n        dispatch(dialogsActions.updateDialog(dialog));\r\n      } else {\r\n        dispatch(dialogsActions.updateDialog(dialog));\r\n      }\r\n    }\r\n  },\r\n  removeMessageById: id => async dispatch => {\r\n    let data = await messagesApi.removeMessageById(id);\r\n    if (data.status === \"success\") {\r\n      dispatch({ type: REMOVE_MESSAGE, payload: id });\r\n    }\r\n  },\r\n  sendMessage: ({ text, currentDialogId, attachments }) => dispatch => {\r\n    messagesApi.sendMessage({ text, currentDialogId, attachments });\r\n  },\r\n  setIsLoading: bool => {\r\n    return { type: SET_IS_LOADING, payload: bool };\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { userApi } from \"../../utils/api\";\r\nimport { openNotification } from \"../../utils/helpers\";\r\nimport { dialogsActions, messagesActions } from \"./index\";\r\nimport { SET_USER_DATA, SET_IS_AUTH } from \"../reduces/user\";\r\n\r\nconst actions = {\r\n  setAuth: payload => ({ type: SET_IS_AUTH, payload }),\r\n  setUserData: data => {\r\n    return {\r\n      type: SET_USER_DATA,\r\n      payload: data\r\n    };\r\n  },\r\n  fetchUserData: () => async dispatch => {\r\n    try {\r\n      const data = await userApi.getUserInfo();\r\n      if (data.data.status === \"success\") {\r\n        dispatch(actions.setUserData(data.data));\r\n        return data;\r\n      }\r\n    } catch (err) {\r\n      if (err.response.status === 403) {\r\n        delete window.localStorage.token;\r\n        window.axios.defaults.headers.common[\"token\"] = \"\";\r\n      } else {\r\n        throw new Error(err);\r\n      }\r\n    }\r\n  },\r\n  signOut: () => async dispatch => {\r\n    dispatch(actions.setAuth(false));\r\n    dispatch(actions.setUserData(null));\r\n    dispatch(dialogsActions.setItems([]));\r\n    dispatch(messagesActions.setMessages([]));\r\n    delete window.localStorage.token;\r\n    dispatch(dialogsActions.setCurrentDialog(null));\r\n  },\r\n\r\n  fetchLoginData: postData => async dispatch => {\r\n    try {\r\n      const data = await userApi.signUserIn(postData);\r\n      if (data.data.status === \"success\") {\r\n        const { token } = data.data;\r\n\r\n        window.localStorage[\"token\"] = token;\r\n        window.axios.defaults.headers.common[\"token\"] = token;\r\n\r\n        openNotification({\r\n          type: \"success\",\r\n          message: \"Авторизация пройшла успешно!\",\r\n          duration: 1\r\n        });\r\n        return data.data;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err.response.status === 404) {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Ошибка при авторизации\",\r\n          description: \"Такой пользователь не зарегистрирован\"\r\n        });\r\n      } else if (err.response.status === 401) {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Ошибка при авторизации\",\r\n          description: \"Ваш аккаунт не подтвержден\"\r\n        });\r\n      } else {\r\n        delete window.localStorage.token;\r\n        window.axios.defaults.headers.common[\"token\"] = \"\";\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Ошибка при авторизации\",\r\n          description: \"Неправильный логин или пароль\"\r\n        });\r\n      }\r\n    }\r\n  },\r\n  signUserUp: postData => async dispatch => {\r\n    try {\r\n      let data = await userApi.signUserUp(postData);\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err.response.status === 400) {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Ошибка при регистрации\",\r\n          description: \"Такой пользователь уже зарегистрирован\"\r\n        });\r\n      } else {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Server Error\",\r\n          description: \"Something went wrong\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { userActions } from \"../actions\";\r\nimport { INITIALIZED_SUCCESS } from \"../reduces/app\";\r\n\r\nconst actions = {\r\n  initializeApp: () => (dispatch, getState) => {\r\n    let isAuth = getState().user.isAuth;\r\n    if (isAuth) {\r\n      let promise = dispatch(userActions.fetchUserData());\r\n      Promise.all([promise]).then(data => {\r\n        dispatch({ type: INITIALIZED_SUCCESS });\r\n      });\r\n    } else {\r\n      dispatch({ type: INITIALIZED_SUCCESS });\r\n    }\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { filesApi } from \"../../utils/api\";\r\nimport { SET_ATTACHMENTS, REMOVE_ATTACHMENT } from \"../reduces/attachments\";\r\n\r\nconst actions = {\r\n  setAttachments: files => {\r\n    return {\r\n      type: SET_ATTACHMENTS,\r\n      payload: files\r\n    };\r\n  },\r\n  removeAttachment: file => {\r\n    return {\r\n      type: REMOVE_ATTACHMENT,\r\n      payload: file\r\n    };\r\n  },\r\n  upload: file => async dispatch => {\r\n    let data = await filesApi.file(file);\r\n    if (data && data.status === \"success\") {\r\n      return data.file;\r\n    }\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport socket from \"../core/socket\";\r\nimport { Dialogs as BaseDialogs } from \"../components\";\r\nimport { dialogsActions } from \"../redux/actions\";\r\n\r\nconst Dialogs = React.memo(\r\n  ({\r\n    items,\r\n    fetchDialogs,\r\n    isLoading,\r\n    userId,\r\n    currentDialogId,\r\n    updateDialogs\r\n  }) => {\r\n    let [inputValue, setInputValue] = useState(\"\");\r\n    let [filtered, setFiltered] = useState(Array.from(items));\r\n\r\n    let onUpdateDialogs = (item, operation = \"SERVER:CREATE_DIALOG\") => {\r\n      updateDialogs({ operation, item });\r\n    };\r\n    let onDeleteMessage = (item, operation = \"SERVER:DELETE_MESSAGE\") => {\r\n      updateDialogs({ operation, item });\r\n    };\r\n    let onNewMessage = (item, operation = \"SERVER:NEW_MESSAGE\") => {\r\n      updateDialogs({ operation, item });\r\n    };\r\n    let onSearch = value => {\r\n      setInputValue(value);\r\n      setFiltered(\r\n        items.filter(item => {\r\n          let user = userId === item.author._id ? item.partner : item.author;\r\n          return user.fullname.toLowerCase().indexOf(value) >= 0;\r\n        })\r\n      );\r\n    };\r\n\r\n    useEffect(() => {\r\n      setFiltered(items);\r\n    }, [items]);\r\n\r\n    useEffect(() => {\r\n      fetchDialogs();\r\n\r\n      socket.on(\"SERVER:CREATE_DIALOG\", onUpdateDialogs);\r\n      socket.on(\"SERVER:DELETE_MESSAGE\", onDeleteMessage);\r\n      socket.on(\"SERVER:NEW_MESSAGE\", onNewMessage);\r\n\r\n      return () => {\r\n        socket.removeListener(\"SERVER:CREATE_DIALOG\", onUpdateDialogs);\r\n\r\n        socket.removeListener(\"SERVER:NEW_MESSAGE\", onNewMessage);\r\n\r\n        socket.removeListener(\"SERVER:DELETE_MESSAGE\", onDeleteMessage);\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <BaseDialogs\r\n        items={filtered}\r\n        onSearch={onSearch}\r\n        inputValue={inputValue}\r\n        isLoading={isLoading}\r\n        userId={userId}\r\n        currentDialogId={currentDialogId}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default connect(\r\n  ({ dialogs, user }) => ({\r\n    items: dialogs.items,\r\n    isLoading: dialogs.isLoading,\r\n    userId: user.data.user._id,\r\n    currentDialogId: dialogs.currentDialogId\r\n  }),\r\n  dialogsActions\r\n)(Dialogs);\r\n","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport socket from \"../core/socket\";\r\nimport { Empty } from \"antd\";\r\n\r\nimport { Messages as BaseMessages } from \"../components\";\r\nimport { messagesActions } from \"../redux/actions\";\r\n\r\nconst Messages = ({\r\n  items,\r\n  fetchMessages,\r\n  currentDialogId,\r\n  isLoading,\r\n  addMessage,\r\n  removeMessageById,\r\n  updateUnreadMessages,\r\n  attachments,\r\n  userId,\r\n  dialogsItems\r\n}) => {\r\n  let [imageUrl, setImageUrl] = useState(null);\r\n  let [showImage, setShowImage] = useState(false);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  let typingTimeoutId = null;\r\n\r\n  const toggleIsTyping = data => {\r\n    if (data.dialogId === currentDialogId) {\r\n      setIsTyping(true);\r\n      clearInterval(typingTimeoutId);\r\n      typingTimeoutId = setTimeout(() => {\r\n        setIsTyping(false);\r\n      }, 3000);\r\n    }\r\n  };\r\n  const onNewMessage = message => {\r\n    addMessage(message);\r\n  };\r\n  const updateUnread = messages => {\r\n    updateUnreadMessages(messages);\r\n  };\r\n  const messagesRef = useCallback(\r\n    node => {\r\n      setTimeout(() => {\r\n        if (node !== null) {\r\n          node.scrollTo(0, 99999);\r\n        }\r\n      });\r\n    },\r\n    [items]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (imageUrl) {\r\n      setShowImage(true);\r\n    }\r\n  }, [imageUrl]);\r\n\r\n  useEffect(() => {\r\n    if (currentDialogId !== null) {\r\n      fetchMessages(currentDialogId);\r\n    }\r\n    socket.on(\"SERVER:NEW_MESSAGE\", onNewMessage);\r\n    socket.on(\"SERVER:UPDATE_UNREADED_MESSAGES\", updateUnread);\r\n    socket.on(\"DIALOGS:TYPING\", toggleIsTyping);\r\n\r\n    return () => {\r\n      socket.removeListener(\"SERVER:NEW_MESSAGE\", onNewMessage);\r\n      socket.removeListener(\"SERVER:UPDATE_UNREADED_MESSAGES\", updateUnread);\r\n      socket.removeListener(\"DIALOGS:TYPING\", toggleIsTyping);\r\n    };\r\n  }, [currentDialogId]);\r\n\r\n  if (!currentDialogId) {\r\n    return <Empty description=\"Виберите диалог\" />;\r\n  }\r\n\r\n  return (\r\n    <BaseMessages\r\n      boxRef={messagesRef}\r\n      items={items}\r\n      isLoading={isLoading}\r\n      currentDialogId={currentDialogId}\r\n      removeMessageById={removeMessageById}\r\n      attachments={attachments}\r\n      setImageUrl={setImageUrl}\r\n      showImage={showImage}\r\n      setShowImage={setShowImage}\r\n      imageUrl={imageUrl}\r\n      userId={userId}\r\n      dialogsItems={dialogsItems}\r\n      isTyping={isTyping}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ dialogs, messages, attachments, user }) => ({\r\n    userId: user.data.user._id,\r\n\r\n    items: messages.items,\r\n    dialogsItems: dialogs.items,\r\n    currentDialogId: dialogs.currentDialogId,\r\n    isLoading: messages.isLoading,\r\n    attachments: attachments.items\r\n  }),\r\n  messagesActions\r\n)(Messages);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { ChatInput as ChatInputBase } from \"../components\";\r\nimport { connect } from \"react-redux\";\r\nimport messagesActions from \"../redux/actions/messages\";\r\nimport { attachmentsActions } from \"../redux/actions\";\r\nimport socket from \"../core/socket\";\r\nimport { filesApi } from \"../utils/api\";\r\n\r\nconst ChatInput = ({\r\n  currentDialogId,\r\n\r\n  sendMessage,\r\n  upload,\r\n  setAttachments,\r\n  removeAttachment,\r\n  attachments\r\n}) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [emojiVisible, setEmojiVisible] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  let [isDisabled, setIsDisabled] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n\r\n  window.navigator.getUserMedia =\r\n    window.navigator.getUserMedia ||\r\n    window.navigator.mozGetUserMedia ||\r\n    window.navigator.msGetUserMedia ||\r\n    window.navigator.webkitGetUserMedia;\r\n\r\n  const onRecord = () => {\r\n    if (navigator.getUserMedia) {\r\n      navigator.getUserMedia({ audio: true }, onRecording, onError);\r\n    }\r\n  };\r\n\r\n  const onRecording = stream => {\r\n    const recorder = new MediaRecorder(stream);\r\n    setMediaRecorder(recorder);\r\n\r\n    recorder.start();\r\n\r\n    recorder.onstart = () => {\r\n      setIsRecording(true);\r\n    };\r\n\r\n    recorder.onstop = () => {\r\n      setIsRecording(false);\r\n    };\r\n\r\n    recorder.ondataavailable = e => {\r\n      const file = new File([e.data], \"audio.webm\");\r\n      console.log(e.data);\r\n      //setLoading(true);\r\n      filesApi.file(file).then(data => {\r\n        sendAudio(data.file._id);\r\n      });\r\n    };\r\n  };\r\n\r\n  const onError = err => {\r\n    console.log(\"The following error occured: \" + err);\r\n  };\r\n\r\n  const sendAudio = audioId => {\r\n    console.log(currentDialogId);\r\n    return sendMessage({\r\n      text: null,\r\n      currentDialogId,\r\n      attachments: [audioId]\r\n    });\r\n  };\r\n  const onSendMessage = () => {\r\n    if (isRecording) {\r\n      mediaRecorder.stop();\r\n    } else if (value || attachments.length) {\r\n      sendMessage({\r\n        text: value,\r\n        currentDialogId,\r\n        attachments: attachments.map(file => file.uid)\r\n      });\r\n      setValue(\"\");\r\n      setAttachments([]);\r\n    }\r\n  };\r\n  const handleSendMessage = e => {\r\n    socket.emit(\"DIALOGS:TYPING\", { dialogId: currentDialogId });\r\n    if (value.length || attachments.length) {\r\n      if (e.keyCode === 13) {\r\n        onSendMessage(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStartRecording = () => {\r\n    setIsRecording(true);\r\n  };\r\n  const onStopRecording = () => {\r\n    setIsRecording(false);\r\n  };\r\n  //----------------------EMOJI\r\n\r\n  const onOutSideClick = (e, el) => {\r\n    if (el && !el.contains(e.target)) {\r\n      setEmojiVisible(false);\r\n    }\r\n  };\r\n  const toggleEmoji = () => {\r\n    setEmojiVisible(!emojiVisible);\r\n  };\r\n  const addEmoji = emoji => {\r\n    setValue(value + emoji.native);\r\n  };\r\n  //---------------------FILE\r\n\r\n  let selectFile = async files => {\r\n    let uploaded = attachments.length ? attachments : [];\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      let uid = Math.random(Math.random() * 1000);\r\n      uploaded = [\r\n        ...uploaded,\r\n        {\r\n          uid,\r\n          name: file.name,\r\n          status: \"done\",\r\n          url:\r\n            \"https://cdn.lowgif.com/small/dc86e54ceca03be4-loading-spinner-animated-gif-83320-mediabin.gif\"\r\n        }\r\n      ];\r\n      setAttachments(uploaded);\r\n      setIsDisabled(true);\r\n      // eslint-disable-next-line no-loop-func\r\n      await upload(file).then(file => {\r\n        uploaded = uploaded.map(item => {\r\n          if (item.uid === uid) {\r\n            return {\r\n              uid: file._id,\r\n              name: file.filename,\r\n              status: \"done\",\r\n              url: file.url\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n      });\r\n    }\r\n    setAttachments(uploaded);\r\n    setIsDisabled(false);\r\n  };\r\n  const inputRef = useCallback(\r\n    node => {\r\n      if (node) {\r\n        let margin = 40;\r\n        let elHeight = node.offsetHeight + margin + 93.5;\r\n\r\n        if (attachments.length > 0) {\r\n          elHeight = elHeight + 112;\r\n        }\r\n        const el = document.querySelector(\".chat__dialog-messages\");\r\n        if (el) {\r\n          el.style.height = `calc(100% - ${elHeight}px)`;\r\n          if (value.length === 0 && !attachments.length) {\r\n            el.style.height = `calc(100% - 185px)`;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [value, attachments]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const el = document.querySelector(\".chat-input__smile-btn\");\r\n    document.addEventListener(\"click\", e => onOutSideClick(e, el));\r\n    return () => {\r\n      document.removeEventListener(\"click\", e => {\r\n        onOutSideClick(e, el);\r\n      });\r\n    };\r\n  }, [currentDialogId]);\r\n  if (!currentDialogId) {\r\n    return null;\r\n  }\r\n  return (\r\n    currentDialogId && (\r\n      <ChatInputBase\r\n        inputRef={inputRef}\r\n        value={value}\r\n        setValue={setValue}\r\n        toggleEmoji={toggleEmoji}\r\n        emojiVisible={emojiVisible}\r\n        setEmojiVisible={setEmojiVisible}\r\n        addEmoji={addEmoji}\r\n        selectFile={selectFile}\r\n        attachments={attachments}\r\n        removeAttachment={removeAttachment}\r\n        isDisabled={isDisabled}\r\n        handleSendMessage={handleSendMessage}\r\n        onSendMessage={onSendMessage}\r\n        isRecording={isRecording}\r\n        handleStartRecording={handleStartRecording}\r\n        onStopRecording={onStopRecording}\r\n        onRecord={onRecord}\r\n      />\r\n    )\r\n  );\r\n};\r\nexport default connect(\r\n  ({ dialogs, attachments, user }) => ({\r\n    currentDialogId: dialogs.currentDialogId,\r\n    attachments: attachments.items\r\n  }),\r\n  { ...messagesActions, ...attachmentsActions }\r\n)(ChatInput);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Status as StatusBase } from \"../components\";\r\n\r\nconst Status = ({ currentDialogId, dialogs, userId }) => {\r\n  if (dialogs.length < 1 || !currentDialogId) {\r\n    return null;\r\n  }\r\n  const currentDialogObj = dialogs.filter(item => {\r\n    return item._id === currentDialogId;\r\n  })[0];\r\n\r\n  if (currentDialogObj) {\r\n    let partner =\r\n      userId === currentDialogObj.author._id\r\n        ? currentDialogObj.partner\r\n        : currentDialogObj.author;\r\n\r\n    return <StatusBase online={partner.isOnline} fullname={partner.fullname} />;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nexport default connect(({ dialogs, user }) => ({\r\n  currentDialogId: dialogs.currentDialogId,\r\n  dialogs: dialogs.items,\r\n  userId: user.data.user._id\r\n}))(Status);\r\n","import React, { useState } from \"react\";\r\nimport { Sidebar as SidebarBase } from \"../components\";\r\nimport { userApi } from \"../utils/api\";\r\nimport { connect } from \"react-redux\";\r\nimport { dialogsActions } from \"../redux/actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nlet Sidebar = props => {\r\n  let [visible, setVisible] = useState(false);\r\n  let [isLoading, setIsLoading] = useState(false);\r\n  let [users, setUsers] = useState([]);\r\n  let [newMessageText, setNewMessageText] = useState(\"\");\r\n  let [partner, setPartner] = useState(null);\r\n  let [selectInputValue, setSelectInputValue] = useState(undefined);\r\n  let showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  let handleOk = async () => {\r\n    setIsLoading(true);\r\n    setNewMessageText(\"\");\r\n    setSelectInputValue(undefined);\r\n    setUsers([]);\r\n    setPartner(null);\r\n    setIsLoading(false);\r\n    setVisible(false);\r\n    setIsLoading(false);\r\n    setVisible(false);\r\n    props.createDialog({ text: newMessageText, partner }).then(data => {\r\n      if (data && data.status === \"success\") {\r\n        props.history.push(`/dialog/${data.dialog._id}`);\r\n      }\r\n    });\r\n  };\r\n\r\n  let handleCancel = () => {\r\n    setVisible(false);\r\n    setSelectInputValue(undefined);\r\n    setPartner(null);\r\n    setUsers([]);\r\n  };\r\n\r\n  //------------------SELECT HANDLERS\r\n  function onInputSelect(value) {\r\n    setPartner(value);\r\n  }\r\n  function onInputChange(value) {\r\n    setSelectInputValue(value);\r\n  }\r\n\r\n  let onSearch = async val => {\r\n    try {\r\n      let data = await userApi.findUsers(val);\r\n      if (data.status === \"success\") {\r\n        setUsers(data.users);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  //-------------------NEW MESSAGE FORM HANDLERS\r\n  let onAddNewMessage = e => {\r\n    setNewMessageText(e.target.value);\r\n  };\r\n  return (\r\n    <SidebarBase\r\n      isLoading={isLoading}\r\n      visible={visible}\r\n      showModal={showModal}\r\n      handleCancel={handleCancel}\r\n      handleOk={handleOk}\r\n      onInputSelect={onInputSelect}\r\n      users={users}\r\n      onSearch={onSearch}\r\n      onAddNewMessage={onAddNewMessage}\r\n      partner={partner}\r\n      newMessageText={newMessageText}\r\n      selectInputValue={selectInputValue}\r\n      onInputChange={onInputChange}\r\n    />\r\n  );\r\n};\r\nexport default withRouter(connect(null, dialogsActions)(Sidebar));\r\n","import React from \"react\";\r\nimport { Button, Icon, Modal, Select, Form, Input } from \"antd\";\r\nimport { Dialogs } from \"../../containers\";\r\nconst { Option } = Select;\r\n\r\nlet Sidebar = props => {\r\n  let {\r\n    isLoading,\r\n    visible,\r\n    modalText,\r\n    showModal,\r\n    handleCancel,\r\n    handleOk,\r\n    onInputSelect,\r\n    onInputChange,\r\n    users,\r\n    onSearch,\r\n    onAddNewMessage,\r\n    partner,\r\n    newMessageText,\r\n    selectInputValue\r\n  } = props;\r\n\r\n  let options = users.map(user => (\r\n    <Option key={user._id}>{user.fullname}</Option>\r\n  ));\r\n  return (\r\n    <div className=\"chat__sidebar\">\r\n      <div className=\"chat__sidebar-header\">\r\n        <div>\r\n          <Icon type=\"team\" />\r\n          <span>Список диалогов</span>\r\n        </div>\r\n        <Button onClick={showModal} type=\"link\" shape=\"circle\" icon=\"form\" />\r\n      </div>\r\n\r\n      <div className=\"chat__sidebar-dialogs\">\r\n        <Dialogs userId=\"dfgf9e7079856ccaa8abeef5b\" />\r\n      </div>\r\n      <div>\r\n        <Modal\r\n          title=\"Создать диалог\"\r\n          visible={visible}\r\n          confirmLoading={isLoading}\r\n          onCancel={handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              Закрыть\r\n            </Button>,\r\n            <Button\r\n              disabled={!newMessageText}\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              loading={isLoading}\r\n              onClick={handleOk}\r\n            >\r\n              Создать\r\n            </Button>\r\n          ]}\r\n        >\r\n          <p>{modalText}</p>\r\n\r\n          <Form className=\"add-dialog-form\">\r\n            <Form.Item label=\"Введите имя пользователя или E-Mail\">\r\n              <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                optionFilterProp=\"children\"\r\n                onChange={onInputChange}\r\n                onSelect={onInputSelect}\r\n                onSearch={onSearch}\r\n                filterOption={false}\r\n                placeholder=\"Имя пользователя или E-mail\"\r\n                value={selectInputValue}\r\n              >\r\n                {options}\r\n              </Select>\r\n            </Form.Item>\r\n            {partner && (\r\n              <Form.Item label=\"Введите текст сообщения\">\r\n                <Input.TextArea\r\n                  onChange={onAddNewMessage}\r\n                  autoSize={{ minRows: 2, maxRows: 6 }}\r\n                  value={newMessageText}\r\n                  placeholder=\"Текст сообщения...\"\r\n                />\r\n              </Form.Item>\r\n            )}\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Upload, Modal } from \"antd\";\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\nlet UploadFiles = ({ attachments, removeAttachment }) => {\r\n  let [previewVisible, setPreviewVisible] = useState(false);\r\n  let [previewImage, setPreviewImage] = useState(\"\");\r\n  let [fileList, setFileList] = useState(attachments);\r\n\r\n  let handleCancel = () => {\r\n    setPreviewVisible(false);\r\n  };\r\n\r\n  let handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewVisible(true);\r\n  };\r\n\r\n  let handleChange = ({ fileList }) => setFileList({ fileList });\r\n\r\n  useEffect(() => {\r\n    setFileList(attachments);\r\n  }, [attachments]);\r\n  return (\r\n    <div className=\"clearfix\">\r\n      <Upload\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        listType=\"picture-card\"\r\n        fileList={fileList}\r\n        onPreview={handlePreview}\r\n        onChange={handleChange}\r\n        onRemove={file => {\r\n          removeAttachment(file);\r\n        }}\r\n      ></Upload>{\" \"}\r\n      <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\r\n        <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n      </Modal>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React from \"react\";\r\nimport { Result } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nlet ErrorIndicator = () => {\r\n  return <Result status=\"500\" subTitle=\"Что-то пошло не так.\" />;\r\n};\r\n\r\nexport default withRouter(ErrorIndicator);\r\n","import React, { Component } from \"react\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  state = {\r\n    errorIndicator: false\r\n  };\r\n  static getDerivedStateFromError(error) {\r\n    // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n    return { errorIndicator: true };\r\n  }\r\n\r\n  // componentDidCatch() {\r\n  //   this.setState({ errorIndicator: true });\r\n  // }\r\n\r\n  render() {\r\n    if (this.state.errorIndicator) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from \"react\";\r\n\r\nimport { Form } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { Button, Block, FormField } from \"../../../components\";\r\n\r\nconst LoginForm = props => {\r\n  const {\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isSubmitting,\r\n    isAuth\r\n  } = props;\r\n  if (isAuth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <div className=\"auth__top\">\r\n        <h2>Войти в аккаунт</h2>\r\n        <p>Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block>\r\n        <Form onSubmit={handleSubmit} className=\"login-form\">\r\n          <FormField\r\n            errors={errors}\r\n            touched={touched}\r\n            placeholder=\"E-mail\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            type=\"email\"\r\n            icon=\"mail\"\r\n            id=\"email\"\r\n          />\r\n          <FormField\r\n            errors={errors}\r\n            touched={touched}\r\n            placeholder=\"Пароль\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            type=\"password\"\r\n            icon=\"lock\"\r\n            id=\"password\"\r\n          />\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSubmit}\r\n              loading={isSubmitting}\r\n              disabled={isSubmitting}\r\n            >\r\n              Войти в аккаунт\r\n            </Button>\r\n          </Form.Item>\r\n          <Link className=\"auth__register-link\" to=\"/signup\">\r\n            Зарегистрироваться\r\n          </Link>\r\n        </Form>\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ErrorButton extends Component {\r\n  state = {\r\n    renderError: false\r\n  };\r\n\r\n  render() {\r\n    if (this.state.renderError) {\r\n      this.foo.bar = 0;\r\n    }\r\n\r\n    return (\r\n      <button onClick={() => this.setState({ renderError: true })}>\r\n        Throw Error\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","export default ({ isAuth, errors, values }) => {\r\n  const rules = {\r\n    email: value => {\r\n      if (!value) {\r\n        errors.email = \"Введите почту\";\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        errors.email = \"Неправильный адресс почты\";\r\n      }\r\n    },\r\n    password: value => {\r\n      if (!value) {\r\n        errors.password = \"Введите пароль\";\r\n      } else if (value.length < 6) {\r\n        !isAuth && (errors.password = \"Слишком лёгкий пароль\");\r\n      }\r\n    },\r\n    password_2: value => {\r\n      if (value !== values.password) {\r\n        errors.password_2 = \"Пароли не совпадают\";\r\n      }\r\n    },\r\n    fullname: value => {\r\n      if (!value) {\r\n        errors.fullname = \"Введите ваше имя\";\r\n      } else if (value.length < 4) {\r\n        errors.fullname = \"Имя должно содержать не меньше 4 символов\";\r\n      }\r\n    }\r\n  };\r\n\r\n  Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n};\r\n","import LoginForm from \"../components/LoginForm\";\r\nimport { withFormik } from \"formik\";\r\nimport validateFunc from \"./../../../utils/validations\";\r\nimport store from \"../../../redux/store\";\r\nimport { userActions } from \"../../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst LoginFormContainer = withFormik({\r\n  // Custom sync validation\r\n\r\n  mapPropsToValues: () => ({ email: \"\", password: \"\" }),\r\n  validate: values => {\r\n    let errors = {};\r\n    validateFunc({ isAuth: true, errors, values });\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: async (values, { setSubmitting, props }) => {\r\n    try {\r\n      let data = await store.dispatch(userActions.fetchLoginData(values));\r\n      setSubmitting(false);\r\n      if (data.status === \"success\") {\r\n        const data = await store.dispatch(userActions.fetchUserData());\r\n        if (data.data.status === \"success\") {\r\n          await store.dispatch({ type: \"USER:SET_IS_AUTH\", payload: true });\r\n          await store.dispatch({ type: \"INITIALIZED_SUCCESS\" });\r\n          props.history.push(\"/\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  },\r\n  displayName: \"LoginForm\"\r\n})(LoginForm);\r\n\r\nexport default connect(({ user }) => {\r\n  return {\r\n    isAuth: user.isAuth\r\n  };\r\n})(LoginFormContainer);\r\n","import LoginForm from './containers/LoginForm';\r\nexport default LoginForm;","import React from \"react\";\r\nimport { Form, Icon } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button, Block, FormField } from \"../../../components\";\r\n\r\nconst success = false;\r\nconst RegisterForm = props => {\r\n  const {\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isSubmitting\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <div className=\"auth__top\">\r\n        <h2>Регистрация</h2>\r\n        <p>Для входа в чат вам нужно зарегистрироваться</p>\r\n      </div>\r\n      <Block>\r\n        {!success ? (\r\n          <Form onSubmit={handleSubmit} className=\"login-form\">\r\n            <FormField\r\n              errors={errors}\r\n              touched={touched}\r\n              placeholder=\"E-mail\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              type=\"email\"\r\n              icon=\"mail\"\r\n              id=\"email\"\r\n            />\r\n            <FormField\r\n              errors={errors}\r\n              touched={touched}\r\n              placeholder=\"Ваше имя\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              type=\"text\"\r\n              icon=\"user\"\r\n              id=\"fullname\"\r\n            />\r\n            <FormField\r\n              errors={errors}\r\n              touched={touched}\r\n              placeholder=\"Пароль\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              type=\"password\"\r\n              icon=\"lock\"\r\n              id=\"password\"\r\n            />\r\n            <FormField\r\n              errors={errors}\r\n              touched={touched}\r\n              placeholder=\"Повторите пароль\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              type=\"password\"\r\n              icon=\"lock\"\r\n              id=\"password_2\"\r\n            />\r\n\r\n            <Form.Item>\r\n              <Button\r\n                disabled={isSubmitting}\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Зарегистрироваться\r\n              </Button>\r\n            </Form.Item>\r\n            <Link className=\"auth__register-link\" to=\"/signin\">\r\n              Войти в аккаунт\r\n            </Link>\r\n          </Form>\r\n        ) : (\r\n          <div className=\"auth__success-block\">\r\n            <div>\r\n              <Icon type=\"info-circle\" theme=\"twoTone\" />\r\n            </div>\r\n            <h2>Подтвердите свой аккаунт</h2>\r\n            <p>\r\n              На вашу почту отправлено письмо с ссылкой на подтверждения\r\n              аккаунта.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import RegisterForm from './containers/RegisterForm';\r\nexport default RegisterForm;","import RegisterForm from \"../components/RegisterForm\";\r\nimport { withFormik } from \"formik\";\r\nimport validateFunc from \"./../../../utils/validations\";\r\nimport store from \"../../../redux/store\";\r\nimport actions from \"../../../redux/actions/user\";\r\n\r\nexport default withFormik({\r\n  // Custom sync validation\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    password_2: \"\",\r\n    fullname: \"\"\r\n  }),\r\n  validate: values => {\r\n    let errors = {};\r\n    validateFunc({ isAuth: false, errors, values });\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: async (values, { setSubmitting, props }) => {\r\n    const { email, password, fullname } = values;\r\n    try {\r\n      let data = await store.dispatch(\r\n        actions.signUserUp({ fullname, password, email })\r\n      );\r\n      if (data.data.status === \"success\") {\r\n        props.history.push(\"/user/verify\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      setSubmitting(false);\r\n    }\r\n  },\r\n  displayName: \"RegisterForm\"\r\n})(RegisterForm);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Result, Button, Spin } from \"antd\";\r\nimport { Block } from \"../../../components\";\r\nimport userApi from \"../../../utils/api/user\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet renderTextInfo = ({ verified, hash, loading, error }) => {\r\n  if (hash) {\r\n    if (verified) {\r\n      return {\r\n        status: \"success\",\r\n        title: \"Готово!\",\r\n        message: \"Ваш аккаунт успешно подтвержден\",\r\n        extra: [\r\n          <Link to=\"/signin\" key=\"123\">\r\n            <Button type=\"primary\">Ввойти в аккаунт</Button>\r\n          </Link>\r\n        ]\r\n      };\r\n    } else if (error) {\r\n      return {\r\n        status: \"error\",\r\n        title: \"Ошибка\",\r\n        message: \"Неудалось подтвердить аккаунт \"\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      status: \"success\",\r\n      title: \"Регистрация прошла успешно!\",\r\n      message: \"Ссылка для подтверждения аккаунта отправлена на почту\"\r\n    };\r\n  }\r\n};\r\n\r\nexport default function CheckEmailInfo(props) {\r\n  const hash = props.location.search.split(\"?hash=\")[1];\r\n\r\n  let [verified, setVerified] = useState(null);\r\n  let [loading, setIsLoading] = useState(false);\r\n  let [error, setError] = useState(false);\r\n\r\n  let info = renderTextInfo({ verified, hash, loading, error });\r\n  useEffect(() => {\r\n    if (hash) {\r\n      userApi\r\n        .verifyHash(hash)\r\n        .then(async data => {\r\n          setIsLoading(true);\r\n          console.log(data);\r\n          if (data.data.status === \"success\") {\r\n            setVerified(true);\r\n            setIsLoading(false);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          setError(true);\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }, [hash]);\r\n  if (loading || !info) {\r\n    return <Spin />;\r\n  }\r\n  return (\r\n    <Block>\r\n      <Result\r\n        status={info.status}\r\n        extra={info.extra}\r\n        title={info.title}\r\n        subTitle={info.message}\r\n      />\r\n    </Block>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { LoginForm, RegisterForm } from \"../../modules/index\";\r\nimport CheckEmailInfo from \"./components/CheckEmailInfo\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <section className=\"auth\">\r\n      <div className=\"auth__content\">\r\n        <Switch>\r\n          <Route exact path=\"/signup\" component={RegisterForm} />\r\n          <Route exact path=\"/user/verify\" component={CheckEmailInfo} />\r\n          <Route path={[\"/\", \"/signin\"]} component={LoginForm} />\r\n        </Switch>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useEffect } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport { Messages, ChatInput, Status, Sidebar } from \"../../containers\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { dialogsActions, userActions } from \"../../redux/actions\";\r\nimport \"./Home.scss\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Home(props) {\r\n  let { setCurrentDialog, signOut, isAuth, fullname } = props;\r\n  let onSignOut = () => {\r\n    let check = window.confirm(\r\n      `${fullname}, вы уверенны что хотите выйти из аккаунта?`\r\n    );\r\n    if (check) {\r\n      signOut();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(1);\r\n      props.history.push(\"/\");\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    let path = props.location.pathname;\r\n    let dialogId = path.split(\"/\").pop();\r\n    if (dialogId.length === 24) {\r\n      setCurrentDialog(dialogId);\r\n    }\r\n  }, [props.location.pathname, setCurrentDialog]);\r\n\r\n  return (\r\n    isAuth && (\r\n      <section className=\"home\">\r\n        <div className=\"chat\">\r\n          <Sidebar />\r\n          <div className=\"chat__dialog\">\r\n            <div className=\"chat__dialog-header\">\r\n              <div />\r\n              <Status />\r\n              <div>\r\n                {\" \"}\r\n                <Icon\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                    marginRight: \"10px\",\r\n                    color: \"#389990\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                  type=\"logout\"\r\n                  onClick={onSignOut}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Messages />\r\n            <div className=\"chat__dialog-input\">\r\n              <ChatInput />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  );\r\n}\r\nexport default withRouter(\r\n  connect(\r\n    ({ user }) => ({ isAuth: user.isAuth, fullname: user.data.user.fullname }),\r\n    {\r\n      ...dialogsActions,\r\n      ...userActions\r\n    }\r\n  )(Home)\r\n);\r\n","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Spin, Result } from \"antd\";\n\nimport { appActions } from \"./redux/actions\";\nimport { Auth, Home } from \"./pages\";\nfunction App(props) {\n  let { isAuth, initializeApp, isInitialized } = props;\n  useEffect(() => {\n    initializeApp();\n  }, [isAuth, initializeApp]);\n\n  if (!isInitialized) {\n    return (\n      <Spin\n        style={{\n          position: \"absolute\",\n          left: \"50%\",\n          top: \"50%\",\n          transform: \"translate(-50%, -50%)\"\n        }}\n        size=\"large\"\n        tip=\"Загрузка...\"\n      />\n    );\n  }\n  return (\n    <div className=\"wrapper\">\n      {\" \"}\n      <Switch>\n        {isAuth && (\n          <Route exact path=\"/:dialog?/:id?\" render={() => <Home />} />\n        )}\n        <Route\n          exact\n          path={[\"/\", \"/signin\", \"/signup\", \"/user/verify\"]}\n          component={Auth}\n        />\n        <Route\n          render={() => {\n            return (\n              <Result\n                status=\"404\"\n                title=\"404\"\n                subTitle=\"Sorry, the page you visited does not exist.\"\n              />\n            );\n          }}\n        />\n      </Switch>\n    </div>\n  );\n}\nexport default connect(\n  ({ user, app }) => ({\n    isAuth: user.isAuth,\n    isInitialized: app.isInitialized\n  }),\n  appActions\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { ErrorBoundry } from \"./components\";\n\nimport App from \"./App\";\n\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <ErrorBoundry>\n        <App />\n      </ErrorBoundry>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const SET_ITEMS = \"DIALOGS:SET_ITEMS\";\r\nexport const SET_CURRENT_DIALOG = \"DIALOGS:SET_CURRENT_DIALOG\";\r\nexport const UPDATE_DIALOG = \"DIALOGS:UPDATE_DIALOG\";\r\nexport const SET_IS_LOADING = \"DIALOGS:SET_IS_LOADING\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  currentDialogId: null,\r\n  isLoading: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: payload\r\n      };\r\n\r\n    case SET_CURRENT_DIALOG:\r\n      return {\r\n        ...state,\r\n        currentDialogId: payload\r\n      };\r\n    case UPDATE_DIALOG:\r\n      let newItems = state.items.map(item => {\r\n        if (item._id === payload._id) {\r\n          item = payload;\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        ...state,\r\n        items: newItems\r\n      };\r\n\r\n    case SET_IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_ITEMS = \"MESSAGES:SET_ITEMS\";\r\nexport const SET_IS_LOADING = \"MESSAGES:SET_IS_LOADING\";\r\nexport const ADD_MESSAGE = \"MESSAGES:ADD_MESSAGE\";\r\nexport const REMOVE_MESSAGE = \"MESSAGES:REMOVE_MESSAGE\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  isLoading: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: payload\r\n      };\r\n\r\n    case SET_IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: payload\r\n      };\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        items: [...state.items, payload]\r\n      };\r\n    case REMOVE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(message => message._id !== payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst reducers = [\"user\", \"dialogs\", \"messages\", \"app\", \"attachments\"];\r\n\r\nexport default combineReducers(\r\n  reducers.reduce((initial, name) => {\r\n    initial[name] = require(`./${name}`).default;\r\n    return initial;\r\n  }, {})\r\n);\r\n","export const INITIALIZED_SUCCESS = \"APP:INITIALIZED_SUCCESS\";\r\n\r\nconst initialState = {\r\n  isInitialized: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isInitialized: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_ATTACHMENTS = \"ATTACHMENTS:SET_ATTACHMENTS\";\r\nexport const REMOVE_ATTACHMENT = \"ATTACHMENTS:REMOVE_ATTACHMENT\";\r\n\r\nconst initialState = {\r\n  items: []\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_ATTACHMENTS:\r\n      return {\r\n        ...state,\r\n        items: payload\r\n      };\r\n    case REMOVE_ATTACHMENT:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.uid !== payload.uid)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_USER_DATA = \"USER:SET_USER_DATA\";\r\nexport const SET_IS_AUTH = \"USER:SET_IS_AUTH\";\r\n\r\nconst initialState = {\r\n  data: null,\r\n  isAuth: window.localStorage.token ? true : false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload\r\n      };\r\n    case SET_IS_AUTH:\r\n      return {\r\n        ...state,\r\n        isAuth: payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"sourceRoot":""}