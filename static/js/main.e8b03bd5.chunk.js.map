{"version":3,"sources":["assets/img/play.svg","assets/img/wave.svg","assets/img/pause.svg","assets/img/readed.svg","assets/img/noreaded.svg","redux/reduces sync /^/.*$","redux/store.js","components/Button/index.js","components/Block/index.js","utils/helpers/validateField.js","utils/helpers/createAvatarFromHash.js","utils/helpers/openNotification.js","utils/helpers/isAudio.js","components/Avatar/index.js","components/Message/index.js","utils/helpers/convertCurentTime.js","components/DialogItem/index.js","components/Time/index.js","components/IconReaded/index.js","components/Dialogs/index.js","components/Status/index.js","components/ChatInput/index.js","components/Messages/index.js","components/FormField/index.js","core/socket.js","core/axios.js","utils/api/dialogs.js","utils/api/messages.js","utils/api/user.js","utils/api/files.js","redux/actions/dialogs.js","redux/actions/messages.js","redux/actions/user.js","redux/actions/app.js","redux/actions/attachments.js","containers/Dialogs.js","containers/Messages.js","containers/ChatInput.js","containers/Status.js","containers/Sidebar.js","components/Sidebar/index.js","components/UploadFiles/index.js","components/ErrorIndicator/index.js","components/ErrorBoundry/index.js","modules/LoginForm/components/LoginForm.jsx","components/ErrorButton/index.js","utils/validations.js","modules/LoginForm/containers/LoginForm.js","modules/LoginForm/index.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/index.js","modules/RegisterForm/containers/RegisterForm.js","pages/Auth/components/CheckEmailInfo.js","pages/Auth/index.js","pages/Home/index.js","App.js","index.js","redux/reduces/messages.js","redux/reduces/dialogs.js","redux/reduces/index.js","redux/reduces/app.js","redux/reduces/attachments.js","redux/reduces/user.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","middleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","Button","props","className","classnames","size","Block","children","key","touched","errors","createAvatarFromHash","hash","substr","split","item","index","charCodeAt","r","g","b","color","tinycolor","lighten","saturate","toHexString","colorLighten","openNotification","type","message","description","duration","notification","attachments","file","length","ext","Avatar","user","avatar","src","alt","fullname","_id","firstChar","toUpperCase","style","background","Emoji","require","Emojione","MessageAudio","audioSrc","useState","isPlaying","setIsPlaying","currentTime","setCurrentTime","progress","setProgress","audioEl","useRef","useEffect","current","addEventListener","ref","preload","width","onClick","pause","play","pauseSvg","playSvg","waveSvg","number","mins","Math","floor","secs","toFixed","convertCurrentTime","Message","createdAt","text","date","isMe","isTyping","audio","readed","onRemoveMessage","setImageUrl","onShowImage","url","classNames","isAudio","isReaded","content","trigger","shape","icon","replace","filename","renderAttachment","Time","Date","defaultProps","DialogItem","create_at","partner","lastMessage","author","currentDialogId","userId","to","isOnline","isToday","format","renderLastMessage","formatInWordsToNow","addSuffix","locale","ruLocale","IconReaded","readedSvg","noReadedSvg","Dialogs","items","onSearch","inputValue","isLoading","Search","Input","value","onChange","target","placeholder","tip","orderBy","Status","online","ChatInput","setValue","toggleEmoji","emojiVisible","addEmoji","selectFile","removeAttachment","isDisabled","inputRef","handleSendMessage","onSendMessage","isRecording","onStopRecording","onRecord","onSelect","TextArea","test","autoSize","minRows","maxRows","allowClear","onKeyUp","disabled","onFiles","containerProps","uploadProps","accept","multiple","Messages","boxRef","removeMessageById","showImage","setShowImage","imageUrl","dialogsItems","currentDialog","find","bind","visible","footer","onCancel","FormField","handleChange","handleBlur","Item","help","validateStatus","validateField","hasFeedback","prefix","onBlur","socket","io","axios","defaults","baseURL","headers","common","localStorage","token","get","a","async","post","data","dialog_id","delete","postData","query","formData","FormData","append","actions","setCurrentDialog","SET_CURRENT_DIALOG","payload","setItems","SET_ITEMS","fetchDialogs","dispatch","setIsLoading","dialogsApi","updateDialog","dialog","UPDATE_DIALOG","updateDialogs","operation","getState","state","oldDialogs","dialogs","some","REMOVE_MESSAGE","createDialog","result","response","status","bool","SET_IS_LOADING","setMessages","fetchMessages","messagesApi","then","addMessage","ADD_MESSAGE","dialogsActions","updateUnreadMessages","messages","currentMessages","filter","sendMessage","setAuth","SET_IS_AUTH","setUserData","SET_USER_DATA","fetchUserData","userApi","signOut","messagesActions","fetchLoginData","console","log","signUserUp","initializeApp","isAuth","promise","userActions","Promise","all","INITIALIZED_SUCCESS","setAttachments","files","SET_ATTACHMENTS","REMOVE_ATTACHMENT","upload","filesApi","React","memo","setInputValue","Array","from","filtered","setFiltered","onUpdateDialogs","onDeleteMessage","onNewMessage","on","removeListener","toLowerCase","indexOf","connect","setIsTyping","typingTimeoutId","toggleIsTyping","dialogId","clearInterval","setTimeout","updateUnread","messagesRef","useCallback","node","scrollTo","msg","attachmentsActions","setLoading","setEmojiVisible","setIsRecording","setIsDisabled","mediaRecorder","setMediaRecorder","navigator","getUserMedia","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","onRecording","stream","recorder","MediaRecorder","start","onstart","onstop","ondataavailable","File","sendAudio","onError","err","audioId","stop","uid","onOutSideClick","el","contains","offsetHeight","elHeight","document","querySelector","height","removeEventListener","emoji","native","uploaded","i","random","name","emit","keyCode","handleStartRecording","currentDialogObj","withRouter","setVisible","users","setUsers","newMessageText","setNewMessageText","setPartner","undefined","selectInputValue","setSelectInputValue","showModal","handleCancel","handleOk","history","push","onInputSelect","val","error","onAddNewMessage","onInputChange","Option","Select","Sidebar","modalText","options","title","confirmLoading","loading","label","showSearch","optionFilterProp","filterOption","getBase64","reject","reader","FileReader","readAsDataURL","onload","onerror","UploadFiles","previewVisible","setPreviewVisible","previewImage","setPreviewImage","fileList","setFileList","action","listType","onPreview","preview","originFileObj","onRemove","subTitle","ErrorBoundry","errorIndicator","this","Component","LoginForm","handleSubmit","isSubmitting","onSubmit","values","rules","email","password","password_2","forEach","LoginFormContainer","withFormik","mapPropsToValues","validate","validateFunc","setSubmitting","displayName","RegisterForm","CheckEmailInfo","location","search","verified","setVerified","setError","info","extra","renderTextInfo","catch","Auth","exact","path","component","pathname","pop","fontSize","marginRight","cursor","confirm","app","isInitialized","appActions","render","position","left","top","transform","ReactDOM","getElementById","initialState","newItems","combineReducers","reduce","initial","default"],"mappings":"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","file":"static/js/main.e8b03bd5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.65f03140.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave.2b8196a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.a61933e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/readed.c1f419d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/noreaded.3c841bf6.svg\";","var map = {\n\t\"./\": 95,\n\t\"./app\": 97,\n\t\"./app.js\": 97,\n\t\"./attachments\": 98,\n\t\"./attachments.js\": 98,\n\t\"./dialogs\": 72,\n\t\"./dialogs.js\": 72,\n\t\"./index\": 95,\n\t\"./index.js\": 95,\n\t\"./messages\": 61,\n\t\"./messages.js\": 61,\n\t\"./user\": 99,\n\t\"./user.js\": 99\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 291;","import {createStore} from \"redux\";\r\nimport {applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {compose} from 'redux';\r\n\r\nimport rootReducer from \"./reduces\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\n    const enhancer = composeEnhancers(\r\n      applyMiddleware(...middleware),\r\n      // other store enhancers if any\r\n    );\r\n\r\n\r\nlet store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport {Button as BaseButton} from 'antd';\r\nimport classnames from 'classnames';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <BaseButton {...props} className={classnames(\"button\", props.className, {'button--large': props.size === 'large'})} />\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: propTypes.string\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n\r\nimport './Block.scss';\r\n\r\nexport default function Block({children, className}) {\r\nreturn <div className = {classnames('block',className)}>{children}</div>\r\n}\r\n","export default (key, touched, errors) => {\r\n  if (touched[key]) {\r\n    if (errors[key]) {\r\n      return \"error\";\r\n    } else {\r\n      return \"success\";\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n","import tinycolor from \"tinycolor2\";\r\n\r\nconst getCorrectIndex = index => {\r\n  return index.charCodeAt(0) > 255\r\n    ? 255\r\n    : index.charCodeAt(0) < 0\r\n    ? 0\r\n    : index.charCodeAt(0);\r\n};\r\n\r\nconst createAvatarFromHash = hash => {\r\n  const [r, g, b] = hash\r\n    .substr(11, 14)\r\n    .split(\"\")\r\n    .map(item => {\r\n      return getCorrectIndex(item);\r\n    });\r\n  return {\r\n    color: tinycolor({ r, g, b })\r\n      .lighten(10)\r\n      .saturate(15)\r\n      .toHexString(),\r\n    colorLighten: tinycolor({ r, g, b })\r\n      .lighten(30)\r\n      .saturate(30)\r\n      .toHexString()\r\n  };\r\n};\r\n\r\nexport default createAvatarFromHash;\r\n","import { notification } from \"antd\";\r\n\r\nconst openNotification = ({ type, message, description, duration }) => {\r\n  notification[type]({\r\n    message,\r\n    description,\r\n    duration\r\n  });\r\n};\r\nexport default openNotification;\r\n","export default attachments => {\n  if (!attachments) {\n    return null;\n  }\n  const file = attachments[0];\n  return attachments.length && file.ext === \"webm\";\n};\n","import React from \"react\";\r\nimport createAvatarFromHash from \"../../utils/helpers/createAvatarFromHash\";\r\n\r\nimport \"./Avatar.scss\";\r\n\r\nexport default function Avatar({ user }) {\r\n  if (user) {\r\n    if (user.avatar) {\r\n      return (\r\n        <img\r\n          src={user.avatar}\r\n          className=\"avatar\"\r\n          alt={`Avatar ${user.fullname}`}\r\n        />\r\n      );\r\n    } else {\r\n      const { color, colorLighten } = createAvatarFromHash(user._id);\r\n      const firstChar = user.fullname[0].toUpperCase();\r\n      return (\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(135deg, ${color} 0%, ${colorLighten} 96.52%)`\r\n          }}\r\n          className=\"avatar avatar--symbol\"\r\n        >\r\n          {firstChar}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nimport convertCurrentTime from \"../../utils/helpers/convertCurentTime\";\r\nimport { isAudio } from \"../../utils/helpers/\";\r\n\r\nimport { Popover, Button } from \"antd\";\r\n\r\nimport { Time, IconReaded } from \"./../../components\";\r\nimport playSvg from \"../../assets/img/play.svg\";\r\nimport waveSvg from \"../../assets/img/wave.svg\";\r\nimport pauseSvg from \"../../assets/img/pause.svg\";\r\nimport Avatar from \"../Avatar\";\r\n\r\nimport \"./Message.scss\";\r\nconst Render = require(\"react-emoji-render\");\r\nconst Emoji = Render.Emojione;\r\n\r\nconst MessageAudio = ({ audioSrc }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const audioEl = useRef(null);\r\n\r\n  const toggleAudio = () => {\r\n    if (!isPlaying) {\r\n      audioEl.current.play();\r\n    } else {\r\n      audioEl.current.pause();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    audioEl.current.addEventListener(\"playing\", () => setIsPlaying(true));\r\n    audioEl.current.addEventListener(\"ended\", () => {\r\n      setIsPlaying(false);\r\n      setProgress(0);\r\n      setCurrentTime(0);\r\n    });\r\n    audioEl.current.addEventListener(\"pause\", () => setIsPlaying(false));\r\n    audioEl.current.addEventListener(\"timeupdate\", () => {\r\n      const duration = (audioEl.current && audioEl.current.duration) || 0;\r\n\r\n      setCurrentTime(audioEl.current.currentTime);\r\n      setProgress((audioEl.current.currentTime / duration) * 100);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"message__audio\">\r\n      <audio src={audioSrc} ref={audioEl} preload=\"auto\"></audio>\r\n      <div\r\n        style={{ width: progress + \"%\" }}\r\n        className=\"message__audio-progress\"\r\n      ></div>\r\n      <div className=\"message__audio-info\">\r\n        <div className=\"message__audio-btn\">\r\n          <button onClick={toggleAudio}>\r\n            {isPlaying ? (\r\n              <img src={pauseSvg} alt=\"Pause swg\" />\r\n            ) : (\r\n              <img src={playSvg} alt=\"Play swg\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div className=\"message__audio-wave\">\r\n          <img src={waveSvg} alt=\"Wave svg\" />\r\n        </div>\r\n        <div className=\"message__audio-duration\">\r\n          {convertCurrentTime(currentTime)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst Message = ({\r\n  createdAt,\r\n  text,\r\n  user,\r\n  date,\r\n  isMe,\r\n  attachments,\r\n  isTyping,\r\n  audio,\r\n  readed,\r\n  onRemoveMessage,\r\n  setImageUrl\r\n}) => {\r\n  const renderAttachment = item => {\r\n    if (item.ext !== \"webm\") {\r\n      return (\r\n        <div key={item._id} className=\"message__attachments-item\">\r\n          <img\r\n            src={item.url.replace(/http/, \"https\")}\r\n            alt={item.filename}\r\n            onClick={() => {\r\n              onShowImage(item.url);\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <MessageAudio key={item._id} audioSrc={item.url} />;\r\n    }\r\n  };\r\n\r\n  let onShowImage = url => {\r\n    setImageUrl(url);\r\n  };\r\n  return (\r\n    <div\r\n      className={classNames(\"message\", {\r\n        \"message--isme\": isMe,\r\n        \"message--is-typing\": isTyping,\r\n        \"message--image\": attachments && attachments.length === 1 && !text,\r\n        \"message--is-audio\": isAudio(attachments)\r\n      })}\r\n    >\r\n      <div className=\"message__content\">\r\n        <IconReaded isMe={isMe} isReaded={readed} />\r\n        {isMe && (\r\n          <div className=\"message__icon-actions\">\r\n            <Popover\r\n              content={\r\n                <div>\r\n                  <Button onClick={onRemoveMessage}>Удалить сообщение</Button>\r\n                </div>\r\n              }\r\n              trigger=\"click\"\r\n            >\r\n              <Button type=\"link\" shape=\"circle\" icon=\"ellipsis\" />\r\n            </Popover>\r\n          </div>\r\n        )}\r\n        <div className=\"message__avatar\">\r\n          <Avatar user={user} />\r\n        </div>\r\n        <div className=\"message__info\">\r\n          {\" \"}\r\n          {(isTyping || text) && (\r\n            <div className=\"message__bubble\">\r\n              {text && <p className=\"message__text\">{<Emoji text={text} />}</p>}\r\n\r\n              {isTyping && (\r\n                <div className=\"message__typing\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              )}\r\n              {audio && <MessageAudio audioSrc={audio} />}\r\n            </div>\r\n          )}\r\n          {attachments && (\r\n            <div className=\"message__attachments\">\r\n              {attachments.map(item => renderAttachment(item))}\r\n            </div>\r\n          )}\r\n          {date && (\r\n            <span className=\"message__date\">\r\n              <Time date={new Date(createdAt)} />\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  user: {}\r\n};\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  text: PropTypes.string,\r\n  user: PropTypes.object,\r\n  data: PropTypes.instanceOf(Date),\r\n  attachments: PropTypes.array,\r\n  isTyping: PropTypes.bool,\r\n  isReaded: PropTypes.bool,\r\n  isMe: PropTypes.bool\r\n};\r\n\r\nexport default Message;\r\n","export default number => {\r\n  const mins = Math.floor(number / 60);\r\n  const secs = (number % 60).toFixed();\r\n  return `${mins < 10 ? \"0\" : \"\"}${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport format from \"date-fns/format\";\r\nimport { Icon } from \"antd\";\r\nimport { IconReaded } from \"..\";\r\nimport isToday from \"date-fns/isToday\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Render = require(\"react-emoji-render\");\r\nconst Emoji = Render.Emojione;\r\nconst getMessageTime = create_at => {\r\n  if (isToday(new Date(create_at))) {\r\n    return format(new Date(create_at), \"HH:mm\");\r\n  } else {\r\n    return format(new Date(create_at), \"dd.MM.yyyy\");\r\n  }\r\n};\r\nconst renderLastMessage = (message, userId) => {\r\n  let text = \"\";\r\n  if (!message.text && message.attachments) {\r\n    text = \"прикрепленный файл\";\r\n  } else {\r\n    text = message.text;\r\n  }\r\n  return (\r\n    <Emoji text={`${message.user._id === userId ? \"Вы: \" : \"\"} ${text}`} />\r\n  );\r\n};\r\nexport default function DialogItem({\r\n  _id,\r\n  isMe,\r\n  partner,\r\n  lastMessage,\r\n  author,\r\n  currentDialogId,\r\n  userId\r\n}) {\r\n  let user = isMe ? partner : author;\r\n  return (\r\n    <Link to={`/dialog/${_id}`}>\r\n      <div\r\n        className={classNames(\"dialogs__item\", {\r\n          \"dialogs__item--online\": user.isOnline,\r\n          \"dialogs__item--active\": currentDialogId === _id\r\n        })}\r\n      >\r\n        <div className=\"dialogs__item-avatar\">\r\n          <Avatar user={user} />\r\n        </div>\r\n        <div className=\"dialogs__item-info\">\r\n          <div className=\"dialogs__item-info-top\">\r\n            <b>{user.fullname}</b>\r\n            {lastMessage && (\r\n              <span>{getMessageTime(new Date(lastMessage.createdAt))}</span>\r\n            )}\r\n          </div>\r\n          {lastMessage && (\r\n            <div className=\"dialogs__item-info-bottom\">\r\n              <p>{renderLastMessage(lastMessage, userId)}</p>\r\n\r\n              <IconReaded\r\n                isMe={userId === lastMessage.user._id}\r\n                isReaded={lastMessage.readed}\r\n              />\r\n\r\n              {lastMessage.user._id !== userId && lastMessage.readed === false && (\r\n                <div className=\"dialogs__item-info-bottom-count\">\r\n                  <Icon type=\"mail\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import React, {Fragment} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport formatInWordsToNow from \"date-fns/formatDistanceToNow\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\n\r\n\r\nexport default function Time({ date }) {\r\n  return <Fragment>{formatInWordsToNow(date, { addSuffix: true, locale: ruLocale })}</Fragment> \r\n}\r\n\r\nTime.propTypes = {\r\n  data: PropTypes.instanceOf(Date)\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport readedSvg from \"../../assets/img/readed.svg\";\r\nimport noReadedSvg from \"../../assets/img/noreaded.svg\";\r\n\r\nimport \"./IconReaded.scss\";\r\n\r\nexport default function IconReaded({ isMe, isReaded }) {\r\n  return (\r\n    <div>\r\n      {isMe &&\r\n        (isReaded ? (\r\n          <img\r\n            className=\"message__icon-readed\"\r\n            src={readedSvg}\r\n            alt=\"Readed icon\"\r\n          />\r\n        ) : (\r\n          <img\r\n            className=\"message__icon-readed message__icon-readed--no\"\r\n            src={noReadedSvg}\r\n            alt=\"No readed icon\"\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nIconReaded.propTypes = {\r\n  isReaded: PropTypes.bool,\r\n  isMe: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport { Input } from \"antd\";\r\nimport { Empty, Spin } from \"antd\";\r\n\r\nimport { DialogItem } from \"..\";\r\n\r\nimport \"./Dialogs.scss\";\r\n\r\nexport default function Dialogs({\r\n  items,\r\n  userId,\r\n  onSearch,\r\n  inputValue,\r\n  isLoading,\r\n  currentDialogId\r\n}) {\r\n  const Search = Input.Search;\r\n\r\n  return (\r\n    <div className=\"dialogs\">\r\n      <div className=\"dialogs__search\">\r\n        <Search\r\n          value={inputValue}\r\n          onChange={e => {\r\n            onSearch(e.target.value);\r\n          }}\r\n          placeholder=\"Поиск среди контактов\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        {isLoading ? (\r\n          <Spin tip=\"Загрузка диалогов\" />\r\n        ) : items ? (\r\n          items.length > 0 ? (\r\n            orderBy(items, [\"created_at\"], [\"desc\"]).map(item => {\r\n              return (\r\n                <DialogItem\r\n                  key={item._id}\r\n                  isMe={item.author._id === userId}\r\n                  userId={userId}\r\n                  currentDialogId={currentDialogId}\r\n                  {...item}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <Empty description=\"Ничего не найдено\" />\r\n          )\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Status.scss\";\r\n\r\nexport default function Status({ online, fullname }) {\r\n  return (\r\n    <div className=\"chat__dialog-header-center\">\r\n      <b className=\"chat__dialog-header-username\">{fullname}</b>\r\n      <div className=\"chat__dialog-header-status\"></div>\r\n      <div className={classNames(\"status\", { \"status--online\": online })}>\r\n        {online ? \"онлайн\" : \"офлайн\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { UploadField } from \"@navjobs/upload\";\r\nimport { UploadFiles } from \"../\";\r\n\r\nimport { Button, Input, Icon } from \"antd\";\r\n\r\nimport \"./ChatInput.scss\";\r\n\r\nconst ChatInput = props => {\r\n  const {\r\n    value,\r\n    setValue,\r\n    toggleEmoji,\r\n    emojiVisible,\r\n    addEmoji,\r\n    selectFile,\r\n    attachments,\r\n    removeAttachment,\r\n    isDisabled,\r\n    inputRef,\r\n    handleSendMessage,\r\n    onSendMessage,\r\n    isRecording,\r\n    onStopRecording,\r\n    onRecord,\r\n    isLoading\r\n  } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div ref={inputRef} className=\"chat-input\">\r\n        <div>\r\n          <div className=\"chat-input__smile-btn\">\r\n            <div className=\"chat-input__emoji-picker\">\r\n              {emojiVisible && <Picker onSelect={addEmoji} />}\r\n            </div>\r\n\r\n            <Button\r\n              onClick={toggleEmoji}\r\n              type=\"link\"\r\n              shape=\"circle\"\r\n              icon=\"smile\"\r\n            />\r\n          </div>\r\n          {isRecording ? (\r\n            <div className=\"chat-input__record-status\">\r\n              <i className=\"chat-input__record-status-bubble\"></i>\r\n              Recording...\r\n              <Button\r\n                className=\"stop-recording\"\r\n                type=\"link\"\r\n                shape=\"circle\"\r\n                icon=\"close\"\r\n                onClick={onStopRecording}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Input.TextArea\r\n              onChange={e => {\r\n                let re = /^\\s/;\r\n                let check = re.test(e.target.value);\r\n                if (!check) {\r\n                  setValue(e.target.value);\r\n                }\r\n              }}\r\n              placeholder=\"Введите текст сообщения\"\r\n              autoSize={{ minRows: 2, maxRows: 8 }}\r\n              allowClear={true}\r\n              value={value}\r\n              onKeyUp={handleSendMessage}\r\n              disabled={isDisabled}\r\n            />\r\n          )}\r\n\r\n          <div className=\"chat-input__actions\">\r\n            {value || attachments.length || isRecording ? (\r\n              <Button\r\n                disabled={isDisabled}\r\n                onClick={onSendMessage}\r\n                size=\"large\"\r\n                type=\"link\"\r\n                icon=\"right-circle\"\r\n              />\r\n            ) : (\r\n              <div className=\"chat-input__record-btn\">\r\n                {isLoading ? (\r\n                  <Icon type=\"loading\" shape=\"circle\" />\r\n                ) : (\r\n                  <Button\r\n                    onClick={onRecord}\r\n                    type=\"link\"\r\n                    shape=\"circle\"\r\n                    icon=\"audio\"\r\n                    size=\"large\"\r\n                  />\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <UploadField\r\n              onFiles={selectFile}\r\n              containerProps={{\r\n                className: \"chat-input__actions-upload-btn\"\r\n              }}\r\n              uploadProps={{\r\n                accept: \".jpg,.jpeg,.png,.gif,.bmp\",\r\n                multiple: \"multiple\"\r\n              }}\r\n            >\r\n              <Button type=\"link\" shape=\"circle\" icon=\"camera\" />\r\n            </UploadField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <UploadFiles\r\n          attachments={attachments}\r\n          removeAttachment={removeAttachment}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nChatInput.propTypes = {};\r\n\r\nexport default ChatInput;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport find from \"lodash/find\";\r\n\r\nimport { Empty, Spin, Modal } from \"antd\";\r\n\r\nimport { Message } from \"../\";\r\n\r\nimport \"./Messages.scss\";\r\n\r\nconst Messages = ({\r\n  items,\r\n  isLoading,\r\n  boxRef,\r\n  currentDialogId,\r\n  userId,\r\n  removeMessageById,\r\n  attachments,\r\n  setImageUrl,\r\n  showImage,\r\n  setShowImage,\r\n  imageUrl,\r\n  dialogsItems,\r\n  isTyping\r\n}) => {\r\n  let currentDialog =\r\n    dialogsItems && find(dialogsItems, { _id: currentDialogId });\r\n  let partner;\r\n  if (currentDialog) {\r\n    partner =\r\n      currentDialog.partner.id === userId\r\n        ? currentDialog.author\r\n        : currentDialog.partner;\r\n  }\r\n\r\n  let handleCancel = () => {\r\n    setShowImage(false);\r\n    setImageUrl(null);\r\n  };\r\n  return (\r\n    <div\r\n      className={classNames(\"chat__dialog-messages\", {\r\n        \"chat__dialog-messages-attachments\": attachments.length\r\n      })}\r\n    >\r\n      <div\r\n        ref={boxRef}\r\n        className={classNames(\"messages\", { \"messages--loading\": isLoading })}\r\n      >\r\n        {isLoading ? (\r\n          <Spin size=\"large\" tip=\"Загрузка сообщений...\" />\r\n        ) : items && !isLoading && currentDialogId ? (\r\n          items.length > 0 ? (\r\n            items.map(item => {\r\n              return (\r\n                <Message\r\n                  key={item._id}\r\n                  alt=\"User avatar\"\r\n                  text={item.text}\r\n                  date={new Date()}\r\n                  isMe={item.user._id === userId}\r\n                  {...item}\r\n                  isTyping={false}\r\n                  onRemoveMessage={removeMessageById.bind(this, item._id)}\r\n                  setImageUrl={setImageUrl}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <Empty description=\"Диалог пуст\" />\r\n          )\r\n        ) : (\r\n          <Empty description=\"Виберите диалог\" />\r\n        )}{\" \"}\r\n        {isTyping && !isLoading && <Message isTyping={true} user={partner} />}\r\n      </div>\r\n\r\n      {imageUrl && (\r\n        <Modal visible={showImage} footer={null} onCancel={handleCancel}>\r\n          <img alt=\"previewImg\" style={{ width: \"100%\" }} src={imageUrl} />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMessages.propTypes = {\r\n  className: propTypes.string\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport { Form, Icon, Input } from \"antd\";\r\n\r\nimport { validateField } from \"../../utils/helpers\";\r\n\r\nexport default function FormField({\r\n  errors,\r\n  type,\r\n  icon,\r\n  placeholder,\r\n  handleChange,\r\n  handleBlur,\r\n  id,\r\n  touched\r\n}) {\r\n  return (\r\n    <Form.Item\r\n      help={touched[id] && errors[id]}\r\n      validateStatus={validateField(id, touched, errors)}\r\n      hasFeedback\r\n    >\r\n      {\" \"}\r\n      <Input\r\n        prefix={<Icon type={icon} style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        id={id}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n      />\r\n    </Form.Item>\r\n  );\r\n}\r\n","import io from \"socket.io-client\";\r\n\r\nconst socket = io(\"https://my-messager-api.herokuapp.com/\");\r\n\r\nexport default socket;\r\n//https://my-messager-api.herokuapp.com/\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://my-messager-api.herokuapp.com/\";\r\naxios.defaults.headers.common[\"token\"] = window.localStorage.token;\r\nwindow.axios = axios;\r\n\r\nexport default axios;\r\n//https://my-messager-api.herokuapp.com/\r\n\r\n//http://localhost:3003\r\n","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  getAll: () => {\r\n    return axios.get(\"dialogs\");\r\n  },\r\n  createDialog: async ({ partner, text }) => {\r\n    let data = await axios.post(\"dialogs\", { partner, text });\r\n    return data.data;\r\n  }\r\n};\r\n","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  getAllByDialogId: id => {\r\n    return axios.get(\"messages?dialog=\" + id);\r\n  },\r\n  sendMessage: ({ text, currentDialogId, attachments }) => {\r\n    return axios.post(\"messages\", {\r\n      text,\r\n      attachments,\r\n      dialog_id: currentDialogId\r\n    });\r\n  },\r\n  removeMessageById: async id => {\r\n    let data = await axios.delete(\"messages?id=\" + id);\r\n    return data.data;\r\n  }\r\n};\r\n","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  signUserIn: postData => {\r\n    return axios.post(\"user/login\", postData);\r\n  },\r\n\r\n  getUserInfo: () => {\r\n    return axios.get(\"user/me\");\r\n  },\r\n  signUserUp: postData => {\r\n    return axios.post(\"user/registration\", postData);\r\n  },\r\n  verifyHash: async hash => {\r\n    let data = await axios.get(`user/verify?hash=${hash}`);\r\n    return data;\r\n  },\r\n  findUsers: async query => {\r\n    let data = await axios.get(`user/find?query=${query}`);\r\n    return data.data;\r\n  }\r\n};\r\n","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  file: async file => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    let data = await axios.post(\"files\", formData, {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\"\r\n      }\r\n    });\r\n    return data.data;\r\n  }\r\n};\r\n// fileUpload(file){\r\n//   const url = 'http://example.com/file-upload';\r\n//   const formData = new FormData();\r\n\r\n//   formData.append('file',file)\r\n//   const config = {\r\n","import { dialogsApi } from \"../../utils/api\";\r\nimport { openNotification } from \"../../utils/helpers\";\r\nimport {\r\n  SET_CURRENT_DIALOG,\r\n  SET_ITEMS,\r\n  UPDATE_DIALOG,\r\n  SET_IS_LOADING\r\n} from \"../reduces/dialogs\";\r\nimport { REMOVE_MESSAGE } from \"../reduces/messages\";\r\n\r\nconst actions = {\r\n  setCurrentDialog: id => ({ type: SET_CURRENT_DIALOG, payload: id }),\r\n  setItems: items => ({ type: SET_ITEMS, payload: items }),\r\n  fetchDialogs: () => async dispatch => {\r\n    dispatch(actions.setIsLoading(true));\r\n    let data = await dialogsApi.getAll();\r\n    dispatch(actions.setItems(data.data));\r\n    dispatch(actions.setIsLoading(false));\r\n  },\r\n  updateDialog: dialog => {\r\n    return { type: UPDATE_DIALOG, payload: dialog };\r\n  },\r\n  updateDialogs: ({ operation = \"\", item }) => (dispatch, getState) => {\r\n    let state = getState();\r\n\r\n    if (operation === \"SERVER:CREATE_DIALOG\") {\r\n      let oldDialogs = state.dialogs.items;\r\n      let userId = state.user.data.user._id;\r\n      let author = item.author._id;\r\n      let partner = item.partner._id;\r\n      let check = userId === partner || userId === author;\r\n      if (check) {\r\n        dispatch(actions.setItems([...oldDialogs, item]));\r\n      }\r\n    } else if (\r\n      operation === \"SERVER:NEW_MESSAGE\" ||\r\n      operation === \"SERVER:DELETE_MESSAGE\"\r\n    ) {\r\n      let dialogs = state.dialogs.items;\r\n\r\n      let check = dialogs.some(dialog => {\r\n        return dialog._id === item.dialog._id;\r\n      });\r\n      if (check) {\r\n        dispatch(actions.updateDialog(item.dialog));\r\n        if (operation === \"SERVER:DELETE_MESSAGE\") {\r\n          dispatch({ type: REMOVE_MESSAGE, payload: item._id });\r\n        }\r\n      }\r\n    }\r\n  },\r\n  createDialog: ({ partner, text }) => async dispatch => {\r\n    try {\r\n      let result = await dialogsApi.createDialog({\r\n        partner,\r\n        text\r\n      });\r\n      return result;\r\n    } catch (err) {\r\n      if (err.response.status === 403) {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Такой диалог уже существует\"\r\n        });\r\n      } else {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Ошибка\"\r\n        });\r\n      }\r\n    }\r\n  },\r\n  setIsLoading: bool => {\r\n    return { type: SET_IS_LOADING, payload: bool };\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { messagesApi } from \"../../utils/api\";\r\nimport { dialogsActions } from \"./index\";\r\nimport { SET_ITEMS, ADD_MESSAGE, SET_IS_LOADING } from \"../reduces/messages\";\r\n\r\nconst actions = {\r\n  setMessages: items => ({ type: SET_ITEMS, payload: items }),\r\n  fetchMessages: id => dispatch => {\r\n    dispatch(actions.setIsLoading(true));\r\n    messagesApi.getAllByDialogId(id).then(({ data }) => {\r\n      dispatch(actions.setMessages(data));\r\n      dispatch(actions.setIsLoading(false));\r\n    });\r\n  },\r\n  addMessage: message => (dispatch, getState) => {\r\n    let { dialogs } = getState();\r\n    let userId = getState().user.data.user._id;\r\n\r\n    if (dialogs.currentDialogId === message.dialog._id) {\r\n      dispatch({ type: ADD_MESSAGE, payload: message });\r\n\r\n      if (userId !== message.user._id) {\r\n        messagesApi.getAllByDialogId(message.dialog._id);\r\n        dispatch(dialogsActions.updateDialog(message.dialog));\r\n      }\r\n    }\r\n  },\r\n\r\n  updateUnreadMessages: ({ messages, dialog }) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    let userId = getState().user.data.user._id;\r\n    let currentDialogId = await getState().dialogs.currentDialogId;\r\n\r\n    let author = dialog.author._id;\r\n    let partner = dialog.partner._id;\r\n    let hasDialog = userId === partner || userId === author;\r\n\r\n    if (hasDialog) {\r\n      if (dialog && dialog._id === currentDialogId) {\r\n        let currentMessages = getState().messages.items.filter(message => {\r\n          return (\r\n            message.dialog._id === currentDialogId &&\r\n            message.user._id === userId\r\n          );\r\n        });\r\n        let check = currentMessages.some(message => message.readed !== true);\r\n        if (check) {\r\n          await dispatch(actions.setMessages(messages));\r\n          await dispatch(dialogsActions.updateDialog(dialog));\r\n        }\r\n        dispatch(dialogsActions.updateDialog(dialog));\r\n      } else {\r\n        dispatch(dialogsActions.updateDialog(dialog));\r\n      }\r\n    }\r\n  },\r\n  removeMessageById: id => async dispatch => {\r\n    await messagesApi.removeMessageById(id);\r\n  },\r\n  sendMessage: ({ text, currentDialogId, attachments }) => dispatch => {\r\n    return messagesApi.sendMessage({ text, currentDialogId, attachments });\r\n  },\r\n  setIsLoading: bool => {\r\n    return { type: SET_IS_LOADING, payload: bool };\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { userApi } from \"../../utils/api\";\r\nimport { openNotification } from \"../../utils/helpers\";\r\nimport { dialogsActions, messagesActions } from \"./index\";\r\nimport { SET_USER_DATA, SET_IS_AUTH } from \"../reduces/user\";\r\n\r\nconst actions = {\r\n  setAuth: payload => ({ type: SET_IS_AUTH, payload }),\r\n  setUserData: data => {\r\n    return {\r\n      type: SET_USER_DATA,\r\n      payload: data\r\n    };\r\n  },\r\n  fetchUserData: () => async dispatch => {\r\n    try {\r\n      const data = await userApi.getUserInfo();\r\n      if (data.data.status === \"success\") {\r\n        dispatch(actions.setUserData(data.data));\r\n        return data;\r\n      }\r\n    } catch (err) {\r\n      if (err.response.status === 403) {\r\n        delete window.localStorage.token;\r\n        window.axios.defaults.headers.common[\"token\"] = \"\";\r\n      } else {\r\n        throw new Error(err);\r\n      }\r\n    }\r\n  },\r\n  signOut: () => async dispatch => {\r\n    dispatch(actions.setAuth(false));\r\n    dispatch(actions.setUserData(null));\r\n    dispatch(dialogsActions.setItems([]));\r\n    dispatch(messagesActions.setMessages([]));\r\n    delete window.localStorage.token;\r\n    dispatch(dialogsActions.setCurrentDialog(null));\r\n  },\r\n\r\n  fetchLoginData: postData => async dispatch => {\r\n    try {\r\n      const data = await userApi.signUserIn(postData);\r\n      if (data.data.status === \"success\") {\r\n        const { token } = data.data;\r\n\r\n        window.localStorage[\"token\"] = token;\r\n        window.axios.defaults.headers.common[\"token\"] = token;\r\n\r\n        openNotification({\r\n          type: \"success\",\r\n          message: \"Авторизация пройшла успешно!\",\r\n          duration: 1\r\n        });\r\n        return data.data;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err.response.status === 404) {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Ошибка при авторизации\",\r\n          description: \"Такой пользователь не зарегистрирован\"\r\n        });\r\n      } else if (err.response.status === 401) {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Ошибка при авторизации\",\r\n          description: \"Ваш аккаунт не подтвержден\"\r\n        });\r\n      } else {\r\n        delete window.localStorage.token;\r\n        window.axios.defaults.headers.common[\"token\"] = \"\";\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Ошибка при авторизации\",\r\n          description: \"Неправильный логин или пароль\"\r\n        });\r\n      }\r\n    }\r\n  },\r\n  signUserUp: postData => async dispatch => {\r\n    try {\r\n      let data = await userApi.signUserUp(postData);\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err.response.status === 400) {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Ошибка при регистрации\",\r\n          description: \"Такой пользователь уже зарегистрирован\"\r\n        });\r\n      } else {\r\n        openNotification({\r\n          type: \"error\",\r\n          message: \"Server Error\",\r\n          description: \"Something went wrong\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { userActions } from \"../actions\";\r\nimport { INITIALIZED_SUCCESS } from \"../reduces/app\";\r\n\r\nconst actions = {\r\n  initializeApp: () => (dispatch, getState) => {\r\n    let isAuth = getState().user.isAuth;\r\n    if (isAuth) {\r\n      let promise = dispatch(userActions.fetchUserData());\r\n      Promise.all([promise]).then(data => {\r\n        dispatch({ type: INITIALIZED_SUCCESS });\r\n      });\r\n    } else {\r\n      dispatch({ type: INITIALIZED_SUCCESS });\r\n    }\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { filesApi } from \"../../utils/api\";\r\nimport { SET_ATTACHMENTS, REMOVE_ATTACHMENT } from \"../reduces/attachments\";\r\n\r\nconst actions = {\r\n  setAttachments: files => {\r\n    return {\r\n      type: SET_ATTACHMENTS,\r\n      payload: files\r\n    };\r\n  },\r\n  removeAttachment: file => {\r\n    return {\r\n      type: REMOVE_ATTACHMENT,\r\n      payload: file\r\n    };\r\n  },\r\n  upload: file => async dispatch => {\r\n    let data = await filesApi.file(file);\r\n    if (data && data.status === \"success\") {\r\n      return data.file;\r\n    }\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport socket from \"../core/socket\";\r\nimport { Dialogs as BaseDialogs } from \"../components\";\r\nimport { dialogsActions } from \"../redux/actions\";\r\n\r\nconst Dialogs = React.memo(\r\n  ({\r\n    items,\r\n    fetchDialogs,\r\n    isLoading,\r\n    userId,\r\n    currentDialogId,\r\n    updateDialogs\r\n  }) => {\r\n    let [inputValue, setInputValue] = useState(\"\");\r\n    let [filtered, setFiltered] = useState(Array.from(items));\r\n\r\n    let onUpdateDialogs = (item, operation = \"SERVER:CREATE_DIALOG\") => {\r\n      updateDialogs({ operation, item });\r\n    };\r\n    let onDeleteMessage = (item, operation = \"SERVER:DELETE_MESSAGE\") => {\r\n      updateDialogs({ operation, item });\r\n    };\r\n    let onNewMessage = (item, operation = \"SERVER:NEW_MESSAGE\") => {\r\n      updateDialogs({ operation, item });\r\n    };\r\n    let onSearch = value => {\r\n      setInputValue(value);\r\n      setFiltered(\r\n        items.filter(item => {\r\n          let user = userId === item.author._id ? item.partner : item.author;\r\n          return user.fullname.toLowerCase().indexOf(value) >= 0;\r\n        })\r\n      );\r\n    };\r\n\r\n    useEffect(() => {\r\n      setFiltered(items);\r\n    }, [items]);\r\n\r\n    useEffect(() => {\r\n      fetchDialogs();\r\n\r\n      socket.on(\"SERVER:CREATE_DIALOG\", onUpdateDialogs);\r\n      socket.on(\"SERVER:DELETE_MESSAGE\", onDeleteMessage);\r\n      socket.on(\"SERVER:NEW_MESSAGE\", onNewMessage);\r\n\r\n      return () => {\r\n        socket.removeListener(\"SERVER:CREATE_DIALOG\", onUpdateDialogs);\r\n\r\n        socket.removeListener(\"SERVER:NEW_MESSAGE\", onNewMessage);\r\n\r\n        socket.removeListener(\"SERVER:DELETE_MESSAGE\", onDeleteMessage);\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <BaseDialogs\r\n        items={filtered}\r\n        onSearch={onSearch}\r\n        inputValue={inputValue}\r\n        isLoading={isLoading}\r\n        userId={userId}\r\n        currentDialogId={currentDialogId}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default connect(\r\n  ({ dialogs, user }) => ({\r\n    items: dialogs.items,\r\n    isLoading: dialogs.isLoading,\r\n    userId: user.data.user._id,\r\n    currentDialogId: dialogs.currentDialogId\r\n  }),\r\n  dialogsActions\r\n)(Dialogs);\r\n","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport socket from \"../core/socket\";\r\nimport { Empty } from \"antd\";\r\n\r\nimport { Messages as BaseMessages } from \"../components\";\r\nimport { messagesActions } from \"../redux/actions\";\r\n\r\nconst Messages = ({\r\n  items,\r\n  fetchMessages,\r\n  currentDialogId,\r\n  isLoading,\r\n  addMessage,\r\n  removeMessageById,\r\n  updateUnreadMessages,\r\n  attachments,\r\n  userId,\r\n  dialogsItems\r\n}) => {\r\n  let [imageUrl, setImageUrl] = useState(null);\r\n  let [showImage, setShowImage] = useState(false);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  let typingTimeoutId = null;\r\n\r\n  const toggleIsTyping = data => {\r\n    if (data.dialogId === currentDialogId) {\r\n      setIsTyping(true);\r\n      clearInterval(typingTimeoutId);\r\n      typingTimeoutId = setTimeout(() => {\r\n        setIsTyping(false);\r\n      }, 3000);\r\n    }\r\n  };\r\n  const onNewMessage = message => {\r\n    addMessage(message);\r\n  };\r\n  const updateUnread = messages => {\r\n    updateUnreadMessages(messages);\r\n  };\r\n  const messagesRef = useCallback(\r\n    node => {\r\n      setTimeout(() => {\r\n        if (node !== null) {\r\n          node.scrollTo(0, 99999);\r\n        }\r\n      });\r\n    },\r\n    [items]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (imageUrl) {\r\n      setShowImage(true);\r\n    }\r\n  }, [imageUrl]);\r\n\r\n  useEffect(() => {\r\n    if (currentDialogId !== null) {\r\n      fetchMessages(currentDialogId);\r\n    }\r\n    socket.on(\"SERVER:NEW_MESSAGE\", onNewMessage);\r\n    socket.on(\"SERVER:UPDATE_UNREADED_MESSAGES\", updateUnread);\r\n    socket.on(\"DIALOGS:TYPING\", toggleIsTyping);\r\n    socket.on(\"SERVER:DELETE_MESSAGE\", msg => {});\r\n\r\n    return () => {\r\n      socket.removeListener(\"SERVER:NEW_MESSAGE\", onNewMessage);\r\n      socket.removeListener(\"SERVER:UPDATE_UNREADED_MESSAGES\", updateUnread);\r\n      socket.removeListener(\"DIALOGS:TYPING\", toggleIsTyping);\r\n    };\r\n  }, [currentDialogId]);\r\n\r\n  if (!currentDialogId) {\r\n    return <Empty description=\"Виберите диалог\" />;\r\n  }\r\n\r\n  return (\r\n    <BaseMessages\r\n      boxRef={messagesRef}\r\n      items={items}\r\n      isLoading={isLoading}\r\n      currentDialogId={currentDialogId}\r\n      removeMessageById={removeMessageById}\r\n      attachments={attachments}\r\n      setImageUrl={setImageUrl}\r\n      showImage={showImage}\r\n      setShowImage={setShowImage}\r\n      imageUrl={imageUrl}\r\n      userId={userId}\r\n      dialogsItems={dialogsItems}\r\n      isTyping={isTyping}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ dialogs, messages, attachments, user }) => ({\r\n    userId: user.data.user._id,\r\n\r\n    items: messages.items,\r\n    dialogsItems: dialogs.items,\r\n    currentDialogId: dialogs.currentDialogId,\r\n    isLoading: messages.isLoading,\r\n    attachments: attachments.items\r\n  }),\r\n  messagesActions\r\n)(Messages);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { ChatInput as ChatInputBase } from \"../components\";\r\nimport { connect } from \"react-redux\";\r\nimport messagesActions from \"../redux/actions/messages\";\r\nimport { attachmentsActions } from \"../redux/actions\";\r\nimport socket from \"../core/socket\";\r\nimport { filesApi } from \"../utils/api\";\r\n\r\nconst ChatInput = ({\r\n  currentDialogId,\r\n\r\n  sendMessage,\r\n  upload,\r\n  setAttachments,\r\n  removeAttachment,\r\n  attachments\r\n}) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [emojiVisible, setEmojiVisible] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  let [isDisabled, setIsDisabled] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n\r\n  window.navigator.getUserMedia =\r\n    window.navigator.getUserMedia ||\r\n    window.navigator.mozGetUserMedia ||\r\n    window.navigator.msGetUserMedia ||\r\n    window.navigator.webkitGetUserMedia;\r\n\r\n  const onRecord = () => {\r\n    if (navigator.getUserMedia) {\r\n      navigator.getUserMedia({ audio: true }, onRecording, onError);\r\n    }\r\n  };\r\n\r\n  const onRecording = stream => {\r\n    const recorder = new MediaRecorder(stream);\r\n    setMediaRecorder(recorder);\r\n\r\n    recorder.start();\r\n\r\n    recorder.onstart = () => {\r\n      setIsRecording(true);\r\n    };\r\n\r\n    recorder.onstop = () => {\r\n      setIsRecording(false);\r\n    };\r\n\r\n    recorder.ondataavailable = e => {\r\n      const file = new File([e.data], \"audio.webm\");\r\n      setLoading(true);\r\n      filesApi.file(file).then(data => {\r\n        sendAudio(data.file._id).then(() => {\r\n          setLoading(false);\r\n        });\r\n      });\r\n    };\r\n  };\r\n\r\n  const onError = err => {\r\n    throw new Error(err);\r\n  };\r\n\r\n  const sendAudio = audioId => {\r\n    return sendMessage({\r\n      text: null,\r\n      currentDialogId,\r\n      attachments: [audioId]\r\n    });\r\n  };\r\n  const onSendMessage = () => {\r\n    if (isRecording) {\r\n      mediaRecorder.stop();\r\n    } else if (value || attachments.length) {\r\n      sendMessage({\r\n        text: value,\r\n        currentDialogId,\r\n        attachments: attachments.map(file => file.uid)\r\n      });\r\n      setValue(\"\");\r\n      setAttachments([]);\r\n    }\r\n  };\r\n  const handleSendMessage = e => {\r\n    socket.emit(\"DIALOGS:TYPING\", { dialogId: currentDialogId });\r\n    if (value.length || attachments.length) {\r\n      if (e.keyCode === 13) {\r\n        onSendMessage(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStartRecording = () => {\r\n    setIsRecording(true);\r\n  };\r\n  const onStopRecording = () => {\r\n    setIsRecording(false);\r\n  };\r\n  //----------------------EMOJI\r\n\r\n  const onOutSideClick = (e, el) => {\r\n    if (el && !el.contains(e.target)) {\r\n      setEmojiVisible(false);\r\n    }\r\n  };\r\n  const toggleEmoji = () => {\r\n    setEmojiVisible(!emojiVisible);\r\n  };\r\n  const addEmoji = emoji => {\r\n    setValue(value + emoji.native);\r\n  };\r\n  //---------------------FILE\r\n\r\n  let selectFile = async files => {\r\n    let uploaded = attachments.length ? attachments : [];\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n      let uid = Math.random(Math.random() * 1000);\r\n      uploaded = [\r\n        ...uploaded,\r\n        {\r\n          uid,\r\n          name: file.name,\r\n          status: \"done\",\r\n          url:\r\n            \"https://cdn.lowgif.com/small/dc86e54ceca03be4-loading-spinner-animated-gif-83320-mediabin.gif\"\r\n        }\r\n      ];\r\n      setAttachments(uploaded);\r\n      setIsDisabled(true);\r\n      // eslint-disable-next-line no-loop-func\r\n      await upload(file).then(file => {\r\n        uploaded = uploaded.map(item => {\r\n          if (item.uid === uid) {\r\n            return {\r\n              uid: file._id,\r\n              name: file.filename,\r\n              status: \"done\",\r\n              url: file.url.replace(/http/, \"https\")\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n      });\r\n    }\r\n    setAttachments(uploaded);\r\n    setIsDisabled(false);\r\n  };\r\n  const inputRef = useCallback(\r\n    node => {\r\n      console.log(value.length);\r\n      if (node) {\r\n        console.log(node.offsetHeight);\r\n        let margin = 40;\r\n        let elHeight = node.offsetHeight + margin + 93.5;\r\n\r\n        if (attachments.length > 0) {\r\n          elHeight = elHeight + 112;\r\n        }\r\n        const el = document.querySelector(\".chat__dialog-messages\");\r\n        if (el) {\r\n          el.style.height = `calc(100% - ${elHeight}px)`;\r\n          if (value.length === 0 && !attachments.length) {\r\n            el.style.height = `calc(100% - 185.5px)`;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [value, attachments]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const el = document.querySelector(\".chat-input__smile-btn\");\r\n    document.addEventListener(\"click\", e => onOutSideClick(e, el));\r\n    return () => {\r\n      document.removeEventListener(\"click\", e => {\r\n        onOutSideClick(e, el);\r\n      });\r\n    };\r\n  }, [currentDialogId]);\r\n  if (!currentDialogId) {\r\n    return null;\r\n  }\r\n  return (\r\n    currentDialogId && (\r\n      <ChatInputBase\r\n        inputRef={inputRef}\r\n        value={value}\r\n        setValue={setValue}\r\n        toggleEmoji={toggleEmoji}\r\n        emojiVisible={emojiVisible}\r\n        setEmojiVisible={setEmojiVisible}\r\n        addEmoji={addEmoji}\r\n        selectFile={selectFile}\r\n        attachments={attachments}\r\n        removeAttachment={removeAttachment}\r\n        isDisabled={isDisabled}\r\n        handleSendMessage={handleSendMessage}\r\n        onSendMessage={onSendMessage}\r\n        isRecording={isRecording}\r\n        handleStartRecording={handleStartRecording}\r\n        onStopRecording={onStopRecording}\r\n        onRecord={onRecord}\r\n        isLoading={isLoading}\r\n      />\r\n    )\r\n  );\r\n};\r\nexport default connect(\r\n  ({ dialogs, attachments, user }) => ({\r\n    currentDialogId: dialogs.currentDialogId,\r\n    attachments: attachments.items\r\n  }),\r\n  { ...messagesActions, ...attachmentsActions }\r\n)(ChatInput);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Status as StatusBase } from \"../components\";\r\n\r\nconst Status = ({ currentDialogId, dialogs, userId }) => {\r\n  if (dialogs.length < 1 || !currentDialogId) {\r\n    return null;\r\n  }\r\n  const currentDialogObj = dialogs.filter(item => {\r\n    return item._id === currentDialogId;\r\n  })[0];\r\n\r\n  if (currentDialogObj) {\r\n    let partner =\r\n      userId === currentDialogObj.author._id\r\n        ? currentDialogObj.partner\r\n        : currentDialogObj.author;\r\n\r\n    return <StatusBase online={partner.isOnline} fullname={partner.fullname} />;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nexport default connect(({ dialogs, user }) => ({\r\n  currentDialogId: dialogs.currentDialogId,\r\n  dialogs: dialogs.items,\r\n  userId: user.data.user._id\r\n}))(Status);\r\n","import React, { useState } from \"react\";\r\nimport { Sidebar as SidebarBase } from \"../components\";\r\nimport { userApi } from \"../utils/api\";\r\nimport { connect } from \"react-redux\";\r\nimport { dialogsActions } from \"../redux/actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nlet Sidebar = props => {\r\n  let [visible, setVisible] = useState(false);\r\n  let [isLoading, setIsLoading] = useState(false);\r\n  let [users, setUsers] = useState([]);\r\n  let [newMessageText, setNewMessageText] = useState(\"\");\r\n  let [partner, setPartner] = useState(null);\r\n  let [selectInputValue, setSelectInputValue] = useState(undefined);\r\n  let showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  let handleOk = async () => {\r\n    setIsLoading(true);\r\n    setNewMessageText(\"\");\r\n    setSelectInputValue(undefined);\r\n    setUsers([]);\r\n    setPartner(null);\r\n    setIsLoading(false);\r\n    setVisible(false);\r\n    setIsLoading(false);\r\n    setVisible(false);\r\n    props.createDialog({ text: newMessageText, partner }).then(data => {\r\n      if (data && data.status === \"success\") {\r\n        props.history.push(`/dialog/${data.dialog._id}`);\r\n      }\r\n    });\r\n  };\r\n\r\n  let handleCancel = () => {\r\n    setVisible(false);\r\n    setSelectInputValue(undefined);\r\n    setPartner(null);\r\n    setUsers([]);\r\n  };\r\n\r\n  //------------------SELECT HANDLERS\r\n  function onInputSelect(value) {\r\n    setPartner(value);\r\n  }\r\n  function onInputChange(value) {\r\n    setSelectInputValue(value);\r\n  }\r\n\r\n  let onSearch = async val => {\r\n    try {\r\n      let data = await userApi.findUsers(val);\r\n      if (data.status === \"success\") {\r\n        setUsers(data.users);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  //-------------------NEW MESSAGE FORM HANDLERS\r\n  let onAddNewMessage = e => {\r\n    setNewMessageText(e.target.value);\r\n  };\r\n  return (\r\n    <SidebarBase\r\n      isLoading={isLoading}\r\n      visible={visible}\r\n      showModal={showModal}\r\n      handleCancel={handleCancel}\r\n      handleOk={handleOk}\r\n      onInputSelect={onInputSelect}\r\n      users={users}\r\n      onSearch={onSearch}\r\n      onAddNewMessage={onAddNewMessage}\r\n      partner={partner}\r\n      newMessageText={newMessageText}\r\n      selectInputValue={selectInputValue}\r\n      onInputChange={onInputChange}\r\n    />\r\n  );\r\n};\r\nexport default withRouter(connect(null, dialogsActions)(Sidebar));\r\n","import React from \"react\";\r\nimport { Button, Icon, Modal, Select, Form, Input } from \"antd\";\r\nimport { Dialogs } from \"../../containers\";\r\nconst { Option } = Select;\r\n\r\nlet Sidebar = props => {\r\n  let {\r\n    isLoading,\r\n    visible,\r\n    modalText,\r\n    showModal,\r\n    handleCancel,\r\n    handleOk,\r\n    onInputSelect,\r\n    onInputChange,\r\n    users,\r\n    onSearch,\r\n    onAddNewMessage,\r\n    partner,\r\n    newMessageText,\r\n    selectInputValue\r\n  } = props;\r\n\r\n  let options = users.map(user => (\r\n    <Option key={user._id}>{user.fullname}</Option>\r\n  ));\r\n  return (\r\n    <div className=\"chat__sidebar\">\r\n      <div className=\"chat__sidebar-header\">\r\n        <div>\r\n          <Icon type=\"team\" />\r\n          <span>Список диалогов</span>\r\n        </div>\r\n        <Button onClick={showModal} type=\"link\" shape=\"circle\" icon=\"form\" />\r\n      </div>\r\n\r\n      <div className=\"chat__sidebar-dialogs\">\r\n        <Dialogs userId=\"dfgf9e7079856ccaa8abeef5b\" />\r\n      </div>\r\n      <div>\r\n        <Modal\r\n          title=\"Создать диалог\"\r\n          visible={visible}\r\n          confirmLoading={isLoading}\r\n          onCancel={handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={handleCancel}>\r\n              Закрыть\r\n            </Button>,\r\n            <Button\r\n              disabled={!newMessageText}\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              loading={isLoading}\r\n              onClick={handleOk}\r\n            >\r\n              Создать\r\n            </Button>\r\n          ]}\r\n        >\r\n          <p>{modalText}</p>\r\n\r\n          <Form className=\"add-dialog-form\">\r\n            <Form.Item label=\"Введите имя пользователя или E-Mail\">\r\n              <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                optionFilterProp=\"children\"\r\n                onChange={onInputChange}\r\n                onSelect={onInputSelect}\r\n                onSearch={onSearch}\r\n                filterOption={false}\r\n                placeholder=\"Имя пользователя или E-mail\"\r\n                value={selectInputValue}\r\n              >\r\n                {options}\r\n              </Select>\r\n            </Form.Item>\r\n            {partner && (\r\n              <Form.Item label=\"Введите текст сообщения\">\r\n                <Input.TextArea\r\n                  onChange={onAddNewMessage}\r\n                  autoSize={{ minRows: 2, maxRows: 6 }}\r\n                  value={newMessageText}\r\n                  placeholder=\"Текст сообщения...\"\r\n                />\r\n              </Form.Item>\r\n            )}\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Upload, Modal } from \"antd\";\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\nlet UploadFiles = ({ attachments, removeAttachment }) => {\r\n  let [previewVisible, setPreviewVisible] = useState(false);\r\n  let [previewImage, setPreviewImage] = useState(\"\");\r\n  let [fileList, setFileList] = useState(attachments);\r\n\r\n  let handleCancel = () => {\r\n    setPreviewVisible(false);\r\n  };\r\n\r\n  let handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewVisible(true);\r\n  };\r\n\r\n  let handleChange = ({ fileList }) => setFileList({ fileList });\r\n\r\n  useEffect(() => {\r\n    setFileList(attachments);\r\n  }, [attachments]);\r\n  return (\r\n    <div className=\"clearfix\">\r\n      <Upload\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        listType=\"picture-card\"\r\n        fileList={fileList}\r\n        onPreview={handlePreview}\r\n        onChange={handleChange}\r\n        onRemove={file => {\r\n          removeAttachment(file);\r\n        }}\r\n      ></Upload>{\" \"}\r\n      <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\r\n        <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n      </Modal>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React from \"react\";\r\nimport { Result } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nlet ErrorIndicator = () => {\r\n  return <Result status=\"500\" subTitle=\"Что-то пошло не так.\" />;\r\n};\r\n\r\nexport default withRouter(ErrorIndicator);\r\n","import React, { Component } from \"react\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  state = {\r\n    errorIndicator: false\r\n  };\r\n  static getDerivedStateFromError(error) {\r\n    // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n    return { errorIndicator: true };\r\n  }\r\n\r\n  // componentDidCatch() {\r\n  //   this.setState({ errorIndicator: true });\r\n  // }\r\n\r\n  render() {\r\n    if (this.state.errorIndicator) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from \"react\";\r\n\r\nimport { Form } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { Button, Block, FormField } from \"../../../components\";\r\n\r\nconst LoginForm = props => {\r\n  const {\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isSubmitting,\r\n    isAuth\r\n  } = props;\r\n  if (isAuth) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <div className=\"auth__top\">\r\n        <h2>Войти в аккаунт</h2>\r\n        <p>Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block>\r\n        <Form onSubmit={handleSubmit} className=\"login-form\">\r\n          <FormField\r\n            errors={errors}\r\n            touched={touched}\r\n            placeholder=\"E-mail\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            type=\"email\"\r\n            icon=\"mail\"\r\n            id=\"email\"\r\n          />\r\n          <FormField\r\n            errors={errors}\r\n            touched={touched}\r\n            placeholder=\"Пароль\"\r\n            handleChange={handleChange}\r\n            handleBlur={handleBlur}\r\n            type=\"password\"\r\n            icon=\"lock\"\r\n            id=\"password\"\r\n          />\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleSubmit}\r\n              loading={isSubmitting}\r\n              disabled={isSubmitting}\r\n            >\r\n              Войти в аккаунт\r\n            </Button>\r\n          </Form.Item>\r\n          <Link className=\"auth__register-link\" to=\"/signup\">\r\n            Зарегистрироваться\r\n          </Link>\r\n        </Form>\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ErrorButton extends Component {\r\n  state = {\r\n    renderError: false\r\n  };\r\n\r\n  render() {\r\n    if (this.state.renderError) {\r\n      this.foo.bar = 0;\r\n    }\r\n\r\n    return (\r\n      <button onClick={() => this.setState({ renderError: true })}>\r\n        Throw Error\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","export default ({ isAuth, errors, values }) => {\r\n  const rules = {\r\n    email: value => {\r\n      if (!value) {\r\n        errors.email = \"Введите почту\";\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        errors.email = \"Неправильный адресс почты\";\r\n      }\r\n    },\r\n    password: value => {\r\n      if (!value) {\r\n        errors.password = \"Введите пароль\";\r\n      } else if (value.length < 6) {\r\n        !isAuth && (errors.password = \"Слишком лёгкий пароль\");\r\n      }\r\n    },\r\n    password_2: value => {\r\n      if (value !== values.password) {\r\n        errors.password_2 = \"Пароли не совпадают\";\r\n      }\r\n    },\r\n    fullname: value => {\r\n      if (!value) {\r\n        errors.fullname = \"Введите ваше имя\";\r\n      } else if (value.length < 4) {\r\n        errors.fullname = \"Имя должно содержать не меньше 4 символов\";\r\n      }\r\n    }\r\n  };\r\n\r\n  Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n};\r\n","import LoginForm from \"../components/LoginForm\";\r\nimport { withFormik } from \"formik\";\r\nimport validateFunc from \"./../../../utils/validations\";\r\nimport store from \"../../../redux/store\";\r\nimport { userActions } from \"../../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst LoginFormContainer = withFormik({\r\n  // Custom sync validation\r\n\r\n  mapPropsToValues: () => ({ email: \"\", password: \"\" }),\r\n  validate: values => {\r\n    let errors = {};\r\n    validateFunc({ isAuth: true, errors, values });\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: async (values, { setSubmitting, props }) => {\r\n    try {\r\n      let data = await store.dispatch(userActions.fetchLoginData(values));\r\n      setSubmitting(false);\r\n      if (data.status === \"success\") {\r\n        const data = await store.dispatch(userActions.fetchUserData());\r\n        if (data.data.status === \"success\") {\r\n          await store.dispatch({ type: \"USER:SET_IS_AUTH\", payload: true });\r\n          await store.dispatch({ type: \"INITIALIZED_SUCCESS\" });\r\n          props.history.push(\"/\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  },\r\n  displayName: \"LoginForm\"\r\n})(LoginForm);\r\n\r\nexport default connect(({ user }) => {\r\n  return {\r\n    isAuth: user.isAuth\r\n  };\r\n})(LoginFormContainer);\r\n","import LoginForm from './containers/LoginForm';\r\nexport default LoginForm;","import React from \"react\";\r\nimport { Form, Icon } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button, Block, FormField } from \"../../../components\";\r\n\r\nconst success = false;\r\nconst RegisterForm = props => {\r\n  const {\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isSubmitting\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <div className=\"auth__top\">\r\n        <h2>Регистрация</h2>\r\n        <p>Для входа в чат вам нужно зарегистрироваться</p>\r\n      </div>\r\n      <Block>\r\n        {!success ? (\r\n          <Form onSubmit={handleSubmit} className=\"login-form\">\r\n            <FormField\r\n              errors={errors}\r\n              touched={touched}\r\n              placeholder=\"E-mail\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              type=\"email\"\r\n              icon=\"mail\"\r\n              id=\"email\"\r\n            />\r\n            <FormField\r\n              errors={errors}\r\n              touched={touched}\r\n              placeholder=\"Ваше имя\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              type=\"text\"\r\n              icon=\"user\"\r\n              id=\"fullname\"\r\n            />\r\n            <FormField\r\n              errors={errors}\r\n              touched={touched}\r\n              placeholder=\"Пароль\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              type=\"password\"\r\n              icon=\"lock\"\r\n              id=\"password\"\r\n            />\r\n            <FormField\r\n              errors={errors}\r\n              touched={touched}\r\n              placeholder=\"Повторите пароль\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              type=\"password\"\r\n              icon=\"lock\"\r\n              id=\"password_2\"\r\n            />\r\n\r\n            <Form.Item>\r\n              <Button\r\n                disabled={isSubmitting}\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Зарегистрироваться\r\n              </Button>\r\n            </Form.Item>\r\n            <Link className=\"auth__register-link\" to=\"/signin\">\r\n              Войти в аккаунт\r\n            </Link>\r\n          </Form>\r\n        ) : (\r\n          <div className=\"auth__success-block\">\r\n            <div>\r\n              <Icon type=\"info-circle\" theme=\"twoTone\" />\r\n            </div>\r\n            <h2>Подтвердите свой аккаунт</h2>\r\n            <p>\r\n              На вашу почту отправлено письмо с ссылкой на подтверждения\r\n              аккаунта.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import RegisterForm from './containers/RegisterForm';\r\nexport default RegisterForm;","import RegisterForm from \"../components/RegisterForm\";\r\nimport { withFormik } from \"formik\";\r\nimport validateFunc from \"./../../../utils/validations\";\r\nimport store from \"../../../redux/store\";\r\nimport actions from \"../../../redux/actions/user\";\r\n\r\nexport default withFormik({\r\n  // Custom sync validation\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    password_2: \"\",\r\n    fullname: \"\"\r\n  }),\r\n  validate: values => {\r\n    let errors = {};\r\n    validateFunc({ isAuth: false, errors, values });\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: async (values, { setSubmitting, props }) => {\r\n    const { email, password, fullname } = values;\r\n    try {\r\n      let data = await store.dispatch(\r\n        actions.signUserUp({ fullname, password, email })\r\n      );\r\n      if (data.data.status === \"success\") {\r\n        props.history.push(\"/user/verify\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      setSubmitting(false);\r\n    }\r\n  },\r\n  displayName: \"RegisterForm\"\r\n})(RegisterForm);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Result, Button, Spin } from \"antd\";\r\nimport { Block } from \"../../../components\";\r\nimport userApi from \"../../../utils/api/user\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet renderTextInfo = ({ verified, hash, loading, error }) => {\r\n  if (hash) {\r\n    if (verified) {\r\n      return {\r\n        status: \"success\",\r\n        title: \"Готово!\",\r\n        message: \"Ваш аккаунт успешно подтвержден\",\r\n        extra: [\r\n          <Link to=\"/signin\" key=\"123\">\r\n            <Button type=\"primary\">Ввойти в аккаунт</Button>\r\n          </Link>\r\n        ]\r\n      };\r\n    } else if (error) {\r\n      return {\r\n        status: \"error\",\r\n        title: \"Ошибка\",\r\n        message: \"Неудалось подтвердить аккаунт \"\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      status: \"success\",\r\n      title: \"Регистрация прошла успешно!\",\r\n      message: \"Ссылка для подтверждения аккаунта отправлена на почту\"\r\n    };\r\n  }\r\n};\r\n\r\nexport default function CheckEmailInfo(props) {\r\n  const hash = props.location.search.split(\"?hash=\")[1];\r\n\r\n  let [verified, setVerified] = useState(null);\r\n  let [loading, setIsLoading] = useState(false);\r\n  let [error, setError] = useState(false);\r\n\r\n  let info = renderTextInfo({ verified, hash, loading, error });\r\n  useEffect(() => {\r\n    if (hash) {\r\n      userApi\r\n        .verifyHash(hash)\r\n        .then(async data => {\r\n          setIsLoading(true);\r\n          if (data.data.status === \"success\") {\r\n            setVerified(true);\r\n            setIsLoading(false);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          setError(true);\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }, [hash]);\r\n  if (loading || !info) {\r\n    return <Spin />;\r\n  }\r\n  return (\r\n    <Block>\r\n      <Result\r\n        status={info.status}\r\n        extra={info.extra}\r\n        title={info.title}\r\n        subTitle={info.message}\r\n      />\r\n    </Block>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { LoginForm, RegisterForm } from \"../../modules/index\";\r\nimport CheckEmailInfo from \"./components/CheckEmailInfo\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <section className=\"auth\">\r\n      <div className=\"auth__content\">\r\n        <Switch>\r\n          <Route exact path=\"/signup\" component={RegisterForm} />\r\n          <Route exact path=\"/user/verify\" component={CheckEmailInfo} />\r\n          <Route path={[\"/\", \"/signin\"]} component={LoginForm} />\r\n        </Switch>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useEffect } from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport { Messages, ChatInput, Status, Sidebar } from \"../../containers\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { dialogsActions, userActions } from \"../../redux/actions\";\r\nimport \"./Home.scss\";\r\n\r\nfunction Home(props) {\r\n  let { setCurrentDialog, signOut, isAuth, fullname } = props;\r\n  let onSignOut = () => {\r\n    let check = window.confirm(\r\n      `${fullname}, вы уверенны что хотите выйти из аккаунта?`\r\n    );\r\n    if (check) {\r\n      signOut();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      props.history.push(\"/\");\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    let path = props.location.pathname;\r\n    let dialogId = path.split(\"/\").pop();\r\n    if (dialogId.length === 24) {\r\n      setCurrentDialog(dialogId);\r\n    }\r\n  }, [props.location.pathname, setCurrentDialog]);\r\n\r\n  return (\r\n    isAuth && (\r\n      <section className=\"home\">\r\n        <div className=\"chat\">\r\n          <Sidebar />\r\n          <div className=\"chat__dialog\">\r\n            <div className=\"chat__dialog-header\">\r\n              <div />\r\n              <Status />\r\n              <div>\r\n                {\" \"}\r\n                <Icon\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                    marginRight: \"10px\",\r\n                    color: \"#389990\",\r\n                    cursor: \"pointer\"\r\n                  }}\r\n                  type=\"logout\"\r\n                  onClick={onSignOut}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Messages />\r\n            <div className=\"chat__dialog-input\">\r\n              <ChatInput />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  );\r\n}\r\nexport default withRouter(\r\n  connect(\r\n    ({ user }) => ({ isAuth: user.isAuth, fullname: user.data.user.fullname }),\r\n    {\r\n      ...dialogsActions,\r\n      ...userActions\r\n    }\r\n  )(Home)\r\n);\r\n","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Spin, Result } from \"antd\";\n\nimport { appActions } from \"./redux/actions\";\nimport { Auth, Home } from \"./pages\";\nfunction App(props) {\n  let { isAuth, initializeApp, isInitialized } = props;\n  useEffect(() => {\n    initializeApp();\n  }, [isAuth, initializeApp]);\n\n  if (!isInitialized) {\n    return (\n      <Spin\n        style={{\n          position: \"absolute\",\n          left: \"50%\",\n          top: \"50%\",\n          transform: \"translate(-50%, -50%)\"\n        }}\n        size=\"large\"\n        tip=\"Загрузка...\"\n      />\n    );\n  }\n  return (\n    <div className=\"wrapper\">\n      {\" \"}\n      <Switch>\n        {isAuth && (\n          <Route exact path=\"/:dialog?/:id?\" render={() => <Home />} />\n        )}\n        <Route\n          exact\n          path={[\"/\", \"/signin\", \"/signup\", \"/user/verify\"]}\n          component={Auth}\n        />\n        <Route\n          render={() => {\n            return (\n              <Result\n                status=\"404\"\n                title=\"404\"\n                subTitle=\"Sorry, the page you visited does not exist.\"\n              />\n            );\n          }}\n        />\n      </Switch>\n    </div>\n  );\n}\nexport default connect(\n  ({ user, app }) => ({\n    isAuth: user.isAuth,\n    isInitialized: app.isInitialized\n  }),\n  appActions\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { ErrorBoundry } from \"./components\";\n\nimport App from \"./App\";\n\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <ErrorBoundry>\n        <App />\n      </ErrorBoundry>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const SET_ITEMS = \"MESSAGES:SET_ITEMS\";\r\nexport const SET_IS_LOADING = \"MESSAGES:SET_IS_LOADING\";\r\nexport const ADD_MESSAGE = \"MESSAGES:ADD_MESSAGE\";\r\nexport const REMOVE_MESSAGE = \"MESSAGES:REMOVE_MESSAGE\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  isLoading: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: payload\r\n      };\r\n\r\n    case SET_IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: payload\r\n      };\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        items: [...state.items, payload]\r\n      };\r\n    case REMOVE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(message => message._id !== payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_ITEMS = \"DIALOGS:SET_ITEMS\";\r\nexport const SET_CURRENT_DIALOG = \"DIALOGS:SET_CURRENT_DIALOG\";\r\nexport const UPDATE_DIALOG = \"DIALOGS:UPDATE_DIALOG\";\r\nexport const SET_IS_LOADING = \"DIALOGS:SET_IS_LOADING\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  currentDialogId: null,\r\n  isLoading: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: payload\r\n      };\r\n\r\n    case SET_CURRENT_DIALOG:\r\n      return {\r\n        ...state,\r\n        currentDialogId: payload\r\n      };\r\n    case UPDATE_DIALOG:\r\n      let newItems = state.items.map(item => {\r\n        if (item._id === payload._id) {\r\n          item = payload;\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        ...state,\r\n        items: newItems\r\n      };\r\n\r\n    case SET_IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst reducers = [\"user\", \"dialogs\", \"messages\", \"app\", \"attachments\"];\r\n\r\nexport default combineReducers(\r\n  reducers.reduce((initial, name) => {\r\n    initial[name] = require(`./${name}`).default;\r\n    return initial;\r\n  }, {})\r\n);\r\n","export const INITIALIZED_SUCCESS = \"APP:INITIALIZED_SUCCESS\";\r\n\r\nconst initialState = {\r\n  isInitialized: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isInitialized: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_ATTACHMENTS = \"ATTACHMENTS:SET_ATTACHMENTS\";\r\nexport const REMOVE_ATTACHMENT = \"ATTACHMENTS:REMOVE_ATTACHMENT\";\r\n\r\nconst initialState = {\r\n  items: []\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_ATTACHMENTS:\r\n      return {\r\n        ...state,\r\n        items: payload\r\n      };\r\n    case REMOVE_ATTACHMENT:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.uid !== payload.uid)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_USER_DATA = \"USER:SET_USER_DATA\";\r\nexport const SET_IS_AUTH = \"USER:SET_IS_AUTH\";\r\n\r\nconst initialState = {\r\n  data: null,\r\n  isAuth: window.localStorage.token ? true : false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload\r\n      };\r\n    case SET_IS_AUTH:\r\n      return {\r\n        ...state,\r\n        isAuth: payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"sourceRoot":""}